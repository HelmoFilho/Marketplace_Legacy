openapi: 3.0.0

info:
  title: "API do projeto B2B"
  description: "Documentação da API do projeto B2B 2.0."
  version: 0.2.0

servers:
  - url: 'https://wsmarketplace-dev.guarany.com.br/api/v1'
    description: Production server

tags:

  - name: "Cadastro de usuario do marketplace"
    description: Criação de um registro de usuario do marketplace"

  - name: "Dados Cadastrais do Usuario do Marketplace"
    description: "Registro dos dados do usuario"

  - name: "Deletar dados do usuario do marketplace"
    description: "Finalização da conta do usuario"

  - name: "Upload de Imagens do usuario"
    description: "Salvamento de imagens que serão utilizadas para o perfil de usuario"

  - name: "Clientes do usuario marketplace"
    description: "Mostra os clientes aos quais o usuario está atrelado"

  - name: "Esquecer senha do marketplace"
    description: "Geração de senha temporária para o usuario do marketplace"

  - name: "Alterar senha do marketplace"
    description: "Alteração de senha para usuario do marketplace"

  - name: "Sessão-in marketplace"
    description: "Inicia a sessão do marketplace"

  - name: "Sessão-out marketplace"
    description: "Encerra a sessão do marketplace"

  - name: "Login do Marketplace"
    description: "Criação de um registro de login para o usuario"

  - name: "Logout do marketplace"
    description: "Desativa o registro de login para o usuario"

  - name: "Orcamento do usuario marketplace"
    description: "Manipulação no orçamento de um usuario-cliente"

  - name: "Listagem de pedido do Marketplace"
    description: "Lista registros de pedido"

  - name: "Registro de pedido do Marketplace"
    description: "Criação de um registro de pedido"

  - name: "Listagem de boletos dos pedidos do Marketplace"
    description: "Lista registros de boleto"

  - name: "Envio de notas fiscais do pedido"
    description: "Envio das notas de um pedido"

  - name: "Envio de boletos do pedido"
    description: "Envio dos boletos de um pedido"

  - name: "Checagem de status do pix"
    description: "Envio de status de pagamento do pix"

  - name: "Listar favoritos do usuario marketplace"
    description: "Listagem nos produtos favoritos de um usuario"

  - name: "Registro de favoritos do usuario marketplace"
    description: "Manipulação nos produtos favoritos de um usuario"

  - name: "Remocao de favoritos do usuario marketplace"
    description: "Remoção nos produtos favoritos de um usuario"

  - name: "Listagem dos ultimos vistos do marketplace"
    description: "Lista os ultimos vistos do usuario"

  - name: "Registro dos ultimos vistos do marketplace"
    description: "Registra/Lista os ultimos vistos do usuario"
  
  - name: "Cartões de crédito do usuario"
    description: "Registro dos cartões de crédito do usuario-cliente"

  - name: "Remoção do cartão de crédito"
    description: "Remove o cartão da base do usuario"

paths:

  /marketplace/usuarios/mudanca-senha:
  
    post:
      tags:
        - "Alterar senha do marketplace"
      summary: Alterar senha

      description: >
                        - Para acessar este endpoint o usuario deve passar pelo processo de esquecer_senha


                        - O processo de alteração de senha será feito para o dono do token

      security:
        - ApiKeyAuth: []

      requestBody:
        description: "Request Body."
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Body-request-alterar-senha-marketplace'
            examples:
              Alteração Comum:  # <--- Nome do Exemplo dado
                summary: Alteração correta
                value:
                  # vv Payload do exemplo vv
                  senha_temporaria: "31855a6c9e1a8f05da6032f1e89568a1"
                  nova_senha: "31855a6c9e1a8f05da6032f1e89568a1"
 
      responses:
        '200':
          description: "Sucesso na operação"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Resposta_Tudo-ok'
                  
              examples:
                
                Resposta_Tudo-ok:
                  summary: "Resposta: tudo ok"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso a request ocorra sem nenhum problema."
                    Saida-Real:
                      status: 200
                      resposta: 
                        tipo: 1
                        descricao: "Troca de senha realizada."

        '400':
          description: "Erro de sintaxe do usuário"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Resposta_Acao-especifica-negada-erro'
                  - $ref: '#/components/schemas/Resposta_Dados-invalidos'
                  - $ref: '#/components/schemas/Resposta_Dados-faltantes'
                  - $ref: '#/components/schemas/Resposta_Valores-invalidos'
                  - $ref: '#/components/schemas/Resposta_Valores-nulos'
              
              examples:

                Resposta_Acao-especifica-negada-erro:
                  summary: "Resposta: Ação especifica negada por erro"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso o token seja enviado na request, ele seja validado, tenha permissão de realizar ação, mas tente fazer algo que não pode acontecer."
                    Saida-Real:
                      status: 400
                      resposta: 
                        tipo: 13
                        descricao: "Ação recusada: Usuário não solicitou alteração senha."
                
                Resposta_Dados-invalidos:
                  summary: "Resposta: Dados inválidos"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Para caso a request seja feita e alguma informação inválida (tag não-esperada) seja enviada."
                    Saida-Real:
                      status: 400
                      resposta: 
                        tipo: 2
                        descricao: "Lista com as chaves que são inválidas."

                Resposta_Dados-faltantes:
                  summary: "Resposta: Dados faltantes"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Para caso a request seja feita e alguma tag obrigatoria não seja enviada."
                    Saida-Real:
                      status: 400
                      resposta: 
                        tipo: 3
                        descricao: "Lista com as chaves que estão faltando."

                Resposta_Valores-invalidos:
                  summary: "Resposta: Valores inválidos"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Para caso a request seja feita e alguma tag obrigatoria esteja com valor do tipo diferente do esperado (string serve para todos)."
                    Saida-Real:
                      status: 400
                      resposta: 
                        tipo: 4
                        descricao: "Lista com as chaves que possuem valores do tipo incorretos."

                Resposta_Valores-nulos:
                  summary: "Resposta: Valores nulos"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Para caso a request seja feita e alguma tag obrigatoria esteja com valor nulo."
                    Saida-Real:
                      status: 400
                      resposta: 
                        tipo: 14
                        descricao: "Lista com as chaves que possuem valores nulos"

        '401':
          description: "Usuário não-autenticado"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Resposta_Token-invalido'
                  - $ref: '#/components/schemas/Resposta_Token-nao-enviado'

              examples:
                
                Resposta_Token-invalido:
                  summary: "Resposta: Token inválido"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso o token seja enviado na request, ele será validado e, caso esteja inválido, será apagado e a sessão de login será encerrada."
                    Saida-Real:
                      status: 401
                      resposta: 
                        tipo: 11
                        descricao: "Token inválido."

                Resposta_Token-nao-enviado:
                  summary: "Resposta: Token não-enviado"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso o token não seja enviado na request."
                    Saida-Real:
                      status: 401
                      resposta: 
                        tipo: 13
                        descricao: "Ação recusada: Token não enviado."

        '409':
          description: "Conflito na resposta (Normalmente para o pedido de um recurso que, supostamente, deveria existir mas não existe e vice-versa)."
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Resposta_Registro-nao-existente'

              examples:
                
                Resposta_Registro-nao-existente:
                  summary: "Resposta: Registro não-existente"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "mensagem especifica para a situação."
                    Saida-Real:
                      status: 409
                      resposta: 
                        tipo: 9
                        descricao: "Usuário ou senha inválido."
  
  /marketplace/usuarios/cadastro:
  
    post:
      tags:
        - "Cadastro de usuario do marketplace"
      summary: Criação de um usuário do marketplace

      description: >
                      Cadastra (Normal ou socialmente) um usuario na plataforma do uno market

      requestBody:
        description: "Request Body."
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Body-request-cadastro-usuario-marketplace'
            examples:
              Cadastro Comum:  # <--- Nome do Exemplo dado
                summary: Cadastro correto
                value:
                  # vv Payload do exemplo vv
                  nome: "Pedro alvares cabral"
                  cpf: "99999999999"
                  cnpj: "99999999999999"
                  telefone: "85999999999"
                  email: "email@servidor.com"
                  senha: "senha123"
                  data_nascimento: "1999-01-01"
                  token_aparelho: "000000"
 
      responses:
        '201':
          description: "Recurso Criado"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Resposta_Tudo-ok'

              examples:
                
                Resposta_Tudo-ok:
                  summary: "Resposta: tudo ok"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso a request ocorra sem nenhum problema."
                    Saida-Real:
                      status: 201
                      resposta: 
                        tipo: 1
                        descricao: "Cadastro do usuário concluido."
              
        '400':
          description: "Erro de sintaxe do usuário"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Resposta_Dados-invalidos'
                  - $ref: '#/components/schemas/Resposta_Dados-faltantes'
                  - $ref: '#/components/schemas/Resposta_Valores-invalidos'
                  - $ref: '#/components/schemas/Resposta_Valores-nulos'
              
              examples:
                
                Resposta_Dados-invalidos:
                  summary: "Resposta: Dados inválidos"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Para caso a request seja feita e alguma informação inválida (tag não-esperada) seja enviada."
                    Saida-Real:
                      status: 400
                      resposta: 
                        tipo: 2
                        descricao: "Lista com as chaves que são inválidas."

                Resposta_Dados-faltantes:
                  summary: "Resposta: Dados faltantes"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Para caso a request seja feita e alguma tag obrigatoria não seja enviada."
                    Saida-Real:
                      status: 400
                      resposta: 
                        tipo: 3
                        descricao: "Lista com as chaves que estão faltando."

                Resposta_Valores-invalidos:
                  summary: "Resposta: Valores inválidos"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Para caso a request seja feita e alguma tag obrigatoria esteja com valor do tipo diferente do esperado (string serve para todos)."
                    Saida-Real:
                      status: 400
                      resposta: 
                        tipo: 4
                        descricao: "Lista com as chaves que possuem valores do tipo incorretos."

                Resposta_Valores-nulos:
                  summary: "Resposta: Valores nulos"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Para caso a request seja feita e alguma tag obrigatoria esteja com valor nulo."
                    Saida-Real:
                      status: 400
                      resposta: 
                        tipo: 14
                        descricao: "Lista com as chaves que possuem valores nulos"

        '409':
          description: "Conflito na resposta (Normalmente para o pedido de um recurso que, supostamente, deveria existir mas não existe e vice-versa)."
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Resposta_Registro-ja-existente'

              examples:

                Resposta_Registro-ja-existente:
                  summary: "Resposta: Registro já-existente"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso já exista um usuario com o email ou cpf da request"
                    Saida-Real:
                      status: 409
                      resposta: 
                        tipo: 5
                        descricao: "Usuário já cadastrado."

  /marketplace/usuarios/senha-temporaria:
  
    post:
      tags:
        - "Esquecer senha do marketplace"
      summary: Criação de senha temporaria

      description: >
                      Faz com que o usuario entre em situação de alteração de senha e cria um token especial para alteração de senha 
                      e uma senha temporária para o mesmo. A senha é enviada por email e por sms.

      requestBody:
        description: "Request Body."
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Body-request-esquecer-senha-marketplace'
            examples:
              Criação de senha temporaria Comum:  # <--- Nome do Exemplo dado
                summary: Criação de senha temporaria correta
                value:
                  # vv Payload do exemplo vv
                  email: "email@servidor.com"
 
      responses:
        '200':
          description: "Sucesso na operação"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Resposta_Tudo-ok'
            
              examples:
                
                Resposta_Tudo-ok:
                  summary: "Resposta: tudo ok"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso a request ocorra sem nenhum problema."
                    Saida-Real:
                      status: 200
                      resposta: 
                        tipo: 1
                        descricao: "Nova senha enviada."

        '400':
          description: "Erro de sintaxe do usuário"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Resposta_Dados-invalidos'
                  - $ref: '#/components/schemas/Resposta_Dados-faltantes'
                  - $ref: '#/components/schemas/Resposta_Valores-invalidos'
                  - $ref: '#/components/schemas/Resposta_Valores-nulos'
              
              examples:

                Resposta_Dados-invalidos:
                  summary: "Resposta: Dados inválidos"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Para caso a request seja feita e alguma informação inválida (tag não-esperada) seja enviada."
                    Saida-Real:
                      status: 400
                      resposta: 
                        tipo: 2
                        descricao: "Lista com as chaves que são inválidas."

                Resposta_Dados-faltantes:
                  summary: "Resposta: Dados faltantes"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Para caso a request seja feita e alguma tag obrigatoria não seja enviada."
                    Saida-Real:
                      status: 400
                      resposta: 
                        tipo: 3
                        descricao: "Lista com as chaves que estão faltando."

                Resposta_Valores-invalidos:
                  summary: "Resposta: Valores inválidos"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Para caso a request seja feita e alguma tag obrigatoria esteja com valor do tipo diferente do esperado (string serve para todos)."
                    Saida-Real:
                      status: 400
                      resposta: 
                        tipo: 4
                        descricao: "Lista com as chaves que possuem valores do tipo incorretos."

                Resposta_Valores-nulos:
                  summary: "Resposta: Valores nulos"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Para caso a request seja feita e alguma tag obrigatoria esteja com valor nulo."
                    Saida-Real:
                      status: 400
                      resposta: 
                        tipo: 14
                        descricao: "Lista com as chaves que possuem valores nulos"

        '409':
          description: "Conflito na resposta (Normalmente para o pedido de um recurso que, supostamente, deveria existir mas não existe e vice-versa)."
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Resposta_Registro-nao-existente'

              examples:
                
                Resposta_Registro-nao-existente:
                  summary: "Resposta: Registro não-existente"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso não exista um usuario com a senha especificada."
                    Saida-Real:
                      status: 409
                      resposta: 
                        tipo: 9
                        descricao: "Usuário inválido."

  /marketplace/usuarios/login:
  
    post:
      tags:
        - "Login do Marketplace"
      summary: Criação do token de sessao do usuário do marketplace.

      description: >
                      * O token para este endpoint é opcional:
                        - Caso o token seja enviado, ele apenas será autenticado (Ver passos para autenticação na parte de autenticação) e será devolvido
                        - Caso o token não seja enviado, o usuario passará pelo processo de login que tem 2 caminhos:
                          - Caso a alteração de senha tenha sido pedida e o token virá com a tag alterar_senha igual a 'true' (redirecionar para alteração de senha)
                          - Caso a alteração de senha não tenha sido pedida e o usuario passará pelo login normal

                      * Para realizar o login social:
                        - Deverar ser enviado o 'auth-token-social' e 'social-platform' no header da requisição
                        - O token e a senha serão ignodados e será necessário somente o resto dos dados explicitados
                    

      security:
        - {}
        - ApiKeyAuth: []

      parameters:
        - in: header
          name: auth-token-social
          description: Token do login social
          schema:
            type: string
          required: false

        - in: header
          name: social-platform
          description: Qual a plataforma esta sendo utilizada para login social
          schema:
            type: string
            enum: 
              - Google
              - Facebook
              - Apple

      requestBody:
        description: "Request Body."
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Body-request-login-marketplace'
            examples:
              Login Comum:  # <--- Nome do Exemplo dado
                summary: Login correto
                value:
                  # vv Payload do exemplo vv
                  email: "email@servidor.com"
                  senha: "31855a6c9e1a8f05da6032f1e89568a1"
                  manter_logado: false
                  token_aparelho: "codigo do dispositivo"
                  latitude: "90"
                  longitude: "90"
 
      responses:
        '200':
          description: "Sucesso na operação"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Resposta_Token-valido'
                  - $ref: '#/components/schemas/Resposta_Token-valido'
              examples:
                
                Resposta_Token-valido:
                  summary: "Resposta: tudo ok"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso a request ocorra sem nenhum problema."
                    Saida-Real:
                      status: 200
                      resposta: 
                        tipo: 1
                        descricao: "Token de sessão enviado."
                      token: "token do usuario para uso normal"
                      nome: "Primeiro nome do usuário"
                      id_usuario: "numero do id do usuário"
                
                Resposta_Token-válido:
                  summary: "Resposta: token válido"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: Caso o token seja enviado na request, ele será validado e, caso esteja válido, será devolvido.
                    Saida-Real:
                      status: 200
                      resposta: 
                        tipo: 1
                        descricao: "Token de sessão enviado."
                      token: "token do usuario para uso normal"
                      nome: "Primeiro nome do usuário"
                      id_usuario: "numero do id do usuário"

        '400':
          description: "Erro de sintaxe do usuário"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Resposta_Acao-especifica-negada-erro'
                  - $ref: '#/components/schemas/Resposta_Dados-invalidos'
                  - $ref: '#/components/schemas/Resposta_Dados-faltantes'
                  - $ref: '#/components/schemas/Resposta_Valores-invalidos'
                  - $ref: '#/components/schemas/Resposta_Valores-nulos'
              
              examples:

                Resposta_Acao-especifica-negada-erro:
                  summary: "Resposta: Ação especifica negada por erro"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso alguma ação que o usuario tenha permissão de realizar não possa ser realizada"
                    Saida-Real:
                      status: 400
                      resposta: 
                        tipo: 13
                        descricao: "Ação recusada: Sessão inexistente."

                Resposta_Dados-invalidos:
                  summary: "Resposta: Dados inválidos"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Para caso a request seja feita e alguma informação inválida (tag não-esperada) seja enviada."
                    Saida-Real:
                      status: 400
                      resposta: 
                        tipo: 2
                        descricao: "Lista com as chaves que são inválidas."

                Resposta_Dados-faltantes:
                  summary: "Resposta: Dados faltantes"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Para caso a request seja feita e alguma tag obrigatoria não seja enviada."
                    Saida-Real:
                      status: 400
                      resposta: 
                        tipo: 3
                        descricao: "Lista com as chaves que estão faltando."

                Resposta_Valores-invalidos:
                  summary: "Resposta: Valores inválidos"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Para caso a request seja feita e alguma tag obrigatoria esteja com valor do tipo diferente do esperado (string serve para todos)."
                    Saida-Real:
                      status: 400
                      resposta: 
                        tipo: 4
                        descricao: "Lista com as chaves que possuem valores do tipo incorretos."

                Resposta_Valores-nulos:
                  summary: "Resposta: Valores nulos"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Para caso a request seja feita e alguma tag obrigatoria esteja com valor nulo."
                    Saida-Real:
                      status: 400
                      resposta: 
                        tipo: 14
                        descricao: "Lista com as chaves que possuem valores nulos"

        '401':
          description: "Usuário não-autenticado"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Resposta_Token-invalido'

              examples:
                
                Resposta_Token-invalido:
                  summary: "Resposta: Token inválido"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso o token seja enviado na request, ele será validado e, caso esteja inválido, será apagado e a sessão de login será encerrada."
                    Saida-Real:
                      status: 401
                      resposta: 
                        tipo: 11
                        descricao: "Token inválido."

        '409':
          description: "Conflito na resposta (Normalmente para o pedido de um recurso que, supostamente, deveria existir mas não existe e vice-versa)."
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Resposta_Registro-nao-existente'

              examples:
                
                Resposta_Registro-nao-existente:
                  summary: "Resposta: Registro não-existente"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso alguma informação sobre o usuario esteja inválida."
                    Saida-Real:
                      status: 409
                      resposta: 
                        tipo: 9
                        descricao: "Usuário ou senha inválido."

  /marketplace/usuarios/logout:
  
    post:
      tags:
        - "Logout do marketplace"
      summary: Invalidação do token de sessao do usuário MARKETPLACE.

      description: >
                      Realiza o logout no usuario dono do token                    

      security:
        - ApiKeyAuth: []
 
      responses:
        '200':
          description: "Sucesso na operação"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Resposta_Tudo-ok'

              examples:
                
                Resposta_Tudo-ok:
                  summary: "Resposta: tudo ok"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso a request ocorra sem nenhum problema."
                    Saida-Real:
                      status: 200
                      resposta: 
                        tipo: 1
                        descricao: "Usuario deslogado."

        '401':
          description: "Usuário não-autenticado"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Resposta_Token-invalido'
                  - $ref: '#/components/schemas/Resposta_Token-nao-enviado'

              examples:
                
                Resposta_Token-invalido:
                  summary: "Resposta: Token inválido"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso o token seja enviado na request, ele será validado e, caso esteja inválido, será apagado e a sessão de login será encerrada."
                    Saida-Real:
                      status: 401
                      resposta: 
                        tipo: 11
                        descricao: "Token inválido."

                Resposta_Token-nao-enviado:
                  summary: "Resposta: Token não-enviado"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso o token não seja enviado na request."
                    Saida-Real:
                      status: 401
                      resposta: 
                        tipo: 13
                        descricao: "Ação recusada: Token não enviado."

  /marketplace/usuarios/sessoes/inicializacao:
  
    post:
      tags:
        - "Sessão-in marketplace"
      summary: Inicialização de sessão.

      description: >
                      Inicializa uma sessão para o app do uno market

      requestBody:
        description: "Request Body."
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Body-request-inicializacao-sessao'
            examples:
              Sessão in Comum:  # <--- Nome do Exemplo dado
                summary: Sessão in correto
                value:
                  # vv Payload do exemplo vv
                  token_aparelho: 1234
                  token_firebase: 1234
                  os: android
                  modelo_aparelho: xiaomi s9
 
      responses:
        '200':
          description: "Sucesso na operação"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Resposta_Tudo-ok'

              examples:
                
                Resposta_Tudo-ok:
                  summary: "Resposta: Inicialização de sessão"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso a request ocorra e uma nova sessão seja criada."
                    Saida-Real:
                      status: 200
                      resposta: 
                        tipo: 1
                        descricao: "Sessão atualizada."

        '201':
          description: "Recurso Criado"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Resposta_Tudo-ok'

              examples:
                
                Resposta_Tudo-ok:
                  summary: "Resposta: Reinicialização de sessão"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso a request ocorra e uma sessão seja reaberta."
                    Saida-Real:
                      status: 200
                      resposta: 
                        tipo: 1
                        descricao: "Nova sessão iniciada."

        '400':
          description: "Erro de sintaxe do usuário"
          content:
            application/json:
              schema:
                oneOf:
                  
                  - $ref: '#/components/schemas/Resposta_Dados-invalidos'
                  - $ref: '#/components/schemas/Resposta_Dados-faltantes'
                  - $ref: '#/components/schemas/Resposta_Valores-invalidos'
                  - $ref: '#/components/schemas/Resposta_Valores-nulos'
              
              examples:
                
                Resposta_Dados-invalidos:
                  summary: "Resposta: Dados inválidos"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Para caso a request seja feita e alguma informação inválida (tag não-esperada) seja enviada."
                    Saida-Real:
                      status: 400
                      resposta: 
                        tipo: 2
                        descricao: "Lista com as chaves que são inválidas."

                Resposta_Dados-faltantes:
                  summary: "Resposta: Dados faltantes"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Para caso a request seja feita e alguma tag obrigatoria não seja enviada."
                    Saida-Real:
                      status: 400
                      resposta: 
                        tipo: 3
                        descricao: "Lista com as chaves que estão faltando."

                Resposta_Valores-invalidos:
                  summary: "Resposta: Valores inválidos"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Para caso a request seja feita e alguma tag obrigatoria esteja com valor do tipo diferente do esperado (string serve para todos)."
                    Saida-Real:
                      status: 400
                      resposta: 
                        tipo: 4
                        descricao: "Lista com as chaves que possuem valores do tipo incorretos."

                Resposta_Valores-nulos:
                  summary: "Resposta: Valores nulos"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Para caso a request seja feita e alguma tag obrigatoria esteja com valor nulo."
                    Saida-Real:
                      status: 400
                      resposta: 
                        tipo: 14
                        descricao: "Lista com as chaves que possuem valores nulos"

  /marketplace/usuarios/sessoes/finalizacao:
  
    post:
      tags:
        - "Sessão-out marketplace"
      summary: Finalização de sessão.

      description: >
                      Finaliza uma sessão já inicializada do uno market

      requestBody:
        description: "Request Body."
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Body-request-finalizacao-sessao'
            examples:
              Sessão out Comum:  # <--- Nome do Exemplo dado
                summary: Sessão out correto
                value:
                  # vv Payload do exemplo vv
                  token_aparelho: "968c8039-2853-4414-ac12-822a0dfcf66a"
                  navegador: "web-ios-968c8039-2853-4414-ac12-822a0dfcf66a"
 
      responses:
        '200':
          description: "Sucesso na operação"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Resposta_Tudo-ok'

              examples:
                
                Resposta_Tudo-ok:
                  summary: "Resposta: tudo ok"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso a request ocorra sem nenhum problema."
                    Saida-Real:
                      status: 200
                      resposta: 
                        tipo: 1
                        descricao: "Sessão finalizada."

        '400':
          description: "Erro de sintaxe do usuário"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Resposta_Acao-especifica-negada-erro'
                 
              examples:

                Resposta_Acao-especifica-negada-erro:
                  summary: "Resposta: Ação especifica negada por erro"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso o token seja enviado na request, ele seja validado, tenha permissão de realizar ação, mas tente fazer algo que não pode acontecer."
                    Saida-Real:
                      status: 400
                      resposta: 
                        tipo: 13
                        descricao: "Ação recusada: Sessão não existente."

  /marketplace/usuarios/eu/orcamento/{id_cliente}:

    get:
      tags:
        - "Orcamento do usuario marketplace"
      summary: Visualização dos registros do carrinho.

      description: >
                      Lista informações de todos os orçamentos do carrinho do usuario-cliente

      security:
        - ApiKeyAuth: []

      parameters:
        - in: path
          name: id_cliente
          schema:
            type: integer
          required: true
          description: id do cliente utilizado

      responses:
        '200':
          description: "Sucesso na operação"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Resposta_Tudo-ok-dados-orcamento'
              
              examples:
                
                Resposta_Tudo-ok-dados-orcamento:
                  summary: "Resposta: tudo ok com dados de orcamento"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso a request ocorra sem nenhum problema."
                    Saida-Real:
                      status: 200
                      resposta: 
                        tipo: 1
                        descricao: "Mensagem especifica para a situação (ter produto|não ter produto)."
                      dados: {
                                "id_usuario": 1,
                                "id_cliente": 2,
                                "ofertas": [],
                                "orcamentos": [
                                    {
                                        "id_orcamento": 123,
                                        "id_distribuidor": 1,
                                        "itens": [
                                            {
                                                "id_produto": "3559-1",
                                                "cod_prod_distr": "7312502",
                                                "id_distribuidor": 1,
                                                "preco_tabela": 38.73,
                                                "preco_financeiro": null,
                                                "preco_desconto": null,
                                                "preco_aplicado": null,
                                                "quantidade": 4,
                                                "estoque": 1737,
                                                "desconto": 0,
                                                "desconto_tipo": 0,
                                                "imagem": [
                                                    "http://192.168.203.24:5977/imagens/produto/150/7897161371024/agua-oxigenada-alyne-creme-40-volumes-100ml-com-24-unidades/1.png",
                                                    "http://192.168.203.24:5977/imagens/produto/150/7897161371024/agua-oxigenada-alyne-creme-40-volumes-100ml-com-24-unidades/2.png"
                                                ],
                                                "categorizacao": [
                                                    {
                                                        "id_tipo": 2,
                                                        "descricao_tipo": "CATEGORIAS",
                                                        "grupo": [
                                                            {
                                                                "id_grupo": 103,
                                                                "descricao_grupo": "CORPO E ROSTO",
                                                                "subgrupo": [
                                                                    {
                                                                        "id_subgrupo": 10325,
                                                                        "descricao_subgrupo": "AG OXIG/AMONIACO/EMULSAO"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    }
                                                ],
                                                "id_tipo": [
                                                    2
                                                ],
                                                "id_grupo": [
                                                    103
                                                ],
                                                "id_subgrupo": [
                                                    10325
                                                ],
                                                "sku": "7897161371024",
                                                "descricao_produto": "AGUA OXIGENADA ALYNE CREME 40 VOLUMES 100ML COM 24 UNIDADES",
                                                "id_marca": 10102,
                                                "descricao_marca": "ALYNE",
                                                "status": "A",
                                                "unidade_embalagem": "CX",
                                                "quantidade_embalagem": 1,
                                                "unidade_venda": "CX",
                                                "quant_unid_venda": 24,
                                                "multiplo_venda": 1
                                            }
                                        ]
                                    }
                                ],
                                "cupons": []
                            }

        '400':
          description: "Erro de sintaxe do usuário"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Resposta_Dados-invalidos'
                  - $ref: '#/components/schemas/Resposta_Dados-faltantes'
                  - $ref: '#/components/schemas/Resposta_Valores-invalidos'
                  - $ref: '#/components/schemas/Resposta_Valores-nulos'
              
              examples:
                
                Resposta_Dados-invalidos:
                  summary: "Resposta: Dados inválidos"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Para caso a request seja feita e alguma informação inválida (tag não-esperada) seja enviada."
                    Saida-Real:
                      status: 400
                      resposta: 
                        tipo: 2
                        descricao: "Lista com as chaves que são inválidas."

                Resposta_Dados-faltantes:
                  summary: "Resposta: Dados faltantes"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Para caso a request seja feita e alguma tag obrigatoria não seja enviada."
                    Saida-Real:
                      status: 400
                      resposta: 
                        tipo: 3
                        descricao: "Lista com as chaves que estão faltando."

                Resposta_Valores-invalidos:
                  summary: "Resposta: Valores inválidos"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Para caso a request seja feita e alguma tag obrigatoria esteja com valor do tipo diferente do esperado (string serve para todos)."
                    Saida-Real:
                      status: 400
                      resposta: 
                        tipo: 4
                        descricao: "Lista com as chaves que possuem valores do tipo incorretos."

                Resposta_Valores-nulos:
                  summary: "Resposta: Valores nulos"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Para caso a request seja feita e alguma tag obrigatoria esteja com valor nulo."
                    Saida-Real:
                      status: 400
                      resposta: 
                        tipo: 14
                        descricao: "Lista com as chaves que possuem valores nulos"

        '401':
          description: "Usuário não-autenticado"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Resposta_Token-invalido'
                  - $ref: '#/components/schemas/Resposta_Token-nao-enviado'

              examples:
                
                Resposta_Token-invalido:
                  summary: "Resposta: Token inválido"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso o token seja enviado na request, ele será validado e, caso esteja inválido, será apagado e a sessão de login será encerrada."
                    Saida-Real:
                      status: 401
                      resposta: 
                        tipo: 11
                        descricao: "Token inválido."

                Resposta_Token-nao-enviado:
                  summary: "Resposta: Token não-enviado"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso o token não seja enviado na request."
                    Saida-Real:
                      status: 401
                      resposta: 
                        tipo: 13
                        descricao: "Ação recusada: Token não enviado."

        '403':
          description: "Usuário sem autorização para acessar recurso"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Resposta_Permissao-insuficiente'
                  - $ref: '#/components/schemas/Resposta_Acao-especifica-negada'

              examples:

                Resposta_Acao-especifica-negada:
                  summary: "Resposta: Ação especifica negada"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso o token seja enviado na request, ele seja validado, tenha permissão suficiente mas não para realizar ação desejada."
                    Saida-Real:
                      status: 403
                      resposta: 
                        tipo: 13
                        descricao: "Ação recusada: Usuario tentando realizar ação por cliente não atrelado ao mesmo."
      
        '404':
          description: "Dados não-existentes"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Resposta_Dados-não-existentes'
              
              examples:
                
                Resposta_Dados-não-existentes:
                  summary: "Resposta: Dados não-existentes"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso a request ocorra mas não existam orçamentos para serem encontrados"
                    Saida-Real:
                      status: 404
                      resposta: 
                        tipo: 7
                        descricao: "Sem dados para retornar." 

    post:
      tags:
        - "Orcamento do usuario marketplace"
      summary: Salvamento dos registros do carrinho.

      description: >
                      Salva todos os orcamentos do carrinho do usuario-cliente no servidor.

      security:
        - ApiKeyAuth: []

      parameters:
        - in: path
          name: id_cliente
          schema:
            type: integer
          required: true
          description: id do cliente utilizado (Não é obrigatorio para o POST)

      requestBody:
        description: "Request Body."
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Body-request-orcamento-marketplace'
            examples:
              Salvamento Comum:  # <--- Nome do Exemplo dado
                summary: Salvamento correto
                value:
                  # vv Payload do exemplo vv
                  id_cliente: 1
                  orcamentos:
                    - id_distribuidor: 1
                      id_cupom: null
                      itens: 
                        - id_produto: "2388-1"
                          quantidade: 1

                        - id_produto: "3332-1"
                          quantidade: 1
                          id_campanha: 451
                          bonificado: false

                        - id_produto: "3332-1"
                          quantidade: 1
                          id_campanha: 451
                          bonificado: true

                        - id_produto: "2243-1"
                          quantidade: 1
                          id_escalonado: 245
 
      responses:
        '200':
          description: "Sucesso na operação"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Resposta_Tudo-ok-dados'
                  - $ref: '#/components/schemas/Resposta_Houveram-erros'
              
              examples:
                
                Resposta_Tudo-ok:
                  summary: "Resposta: tudo ok"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso a request ocorra sem nenhum problema."
                    Saida-Real:
                      status: 200
                      resposta: 
                        tipo: 1
                        descricao: "Mensagem especifica para a situação (salvar|deletar)."
                      dados: {
                                "id_cliente": 2,
                                "orcamentos": [
                                    {
                                        "id_orcamento": 123,
                                        "id_distribuidor": 1
                                    }
                                ]
                            }

                Resposta_Houveram-erros:
                  summary: "Resposta: Houveram erros"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso a request ocorra e algum problema ocorra."
                    Saida-Real:
                      status: 200
                      resposta: 
                        tipo: 15
                        descricao: "Token de sessão enviado."
                      situacao:
                        sucessos: 0
                        falhas: 1
                        descricao: 
                          - motivo: 'Motivo especifico para o erro.'
                            combinacao: 
                              chaves: Chaves unicas para descobrir qual o erro

        '400':
          description: "Erro de sintaxe do usuário"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Resposta_Dados-invalidos'
                  - $ref: '#/components/schemas/Resposta_Dados-faltantes'
                  - $ref: '#/components/schemas/Resposta_Valores-invalidos'
                  - $ref: '#/components/schemas/Resposta_Valores-nulos'
              
              examples:
                
                Resposta_Dados-invalidos:
                  summary: "Resposta: Dados inválidos"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Para caso a request seja feita e alguma informação inválida (tag não-esperada) seja enviada."
                    Saida-Real:
                      status: 400
                      resposta: 
                        tipo: 2
                        descricao: "Lista com as chaves que são inválidas."

                Resposta_Dados-faltantes:
                  summary: "Resposta: Dados faltantes"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Para caso a request seja feita e alguma tag obrigatoria não seja enviada."
                    Saida-Real:
                      status: 400
                      resposta: 
                        tipo: 3
                        descricao: "Lista com as chaves que estão faltando."

                Resposta_Valores-invalidos:
                  summary: "Resposta: Valores inválidos"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Para caso a request seja feita e alguma tag obrigatoria esteja com valor do tipo diferente do esperado (string serve para todos)."
                    Saida-Real:
                      status: 400
                      resposta: 
                        tipo: 4
                        descricao: "Lista com as chaves que possuem valores do tipo incorretos."

                Resposta_Valores-nulos:
                  summary: "Resposta: Valores nulos"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Para caso a request seja feita e alguma tag obrigatoria esteja com valor nulo."
                    Saida-Real:
                      status: 400
                      resposta: 
                        tipo: 14
                        descricao: "Lista com as chaves que possuem valores nulos"

        '401':
          description: "Usuário não-autenticado"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Resposta_Token-invalido'
                  - $ref: '#/components/schemas/Resposta_Token-nao-enviado'

              examples:
                
                Resposta_Token-invalido:
                  summary: "Resposta: Token inválido"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso o token seja enviado na request, ele será validado e, caso esteja inválido, será apagado e a sessão de login será encerrada."
                    Saida-Real:
                      status: 401
                      resposta: 
                        tipo: 11
                        descricao: "Token inválido."

                Resposta_Token-nao-enviado:
                  summary: "Resposta: Token não-enviado"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso o token não seja enviado na request."
                    Saida-Real:
                      status: 401
                      resposta: 
                        tipo: 13
                        descricao: "Ação recusada: Token não enviado."

        '403':
          description: "Usuário sem autorização para acessar recurso"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Resposta_Permissao-insuficiente'
                  - $ref: '#/components/schemas/Resposta_Acao-especifica-negada'

              examples:

                Resposta_Acao-especifica-negada:
                  summary: "Resposta: Ação especifica negada"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso o token seja enviado na request, ele seja validado, tenha permissão suficiente mas não para realizar ação desejada."
                    Saida-Real:
                      status: 403
                      resposta: 
                        tipo: 13
                        descricao: "Ação recusada: Usuario tentando realizar ação por cliente não atrelado ao mesmo."

  /marketplace/usuarios/eu/pedidos:
  
    post:
      tags:
        - "Listagem de pedido do Marketplace"
      summary: Lista os pedido para o usuario-cliente do marketplace.

      description: "
                    "

      security:
        - ApiKeyAuth: []

      requestBody:
        description: "Request Body."
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Body-request-listar-pedidos'
            examples:
              Request Comum:  # <--- Nome do Exemplo dado
                summary: Request correto
                value:
                  # vv Payload do exemplo vv
                  id_cliente: 1
                  id_distribuidor: []
                  id_pedido: 1
                  etapa: 0
                  busca: ""
                  data_pedido_de: "1900-01-01"
                  data_pedido_ate: "3000-01-01"
                  pagina: 1
                  limite: 1
 
      responses:
        '200':
          description: "Sucesso na operação"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Resposta_Tudo-ok-paginado'

              examples:
                
                Resposta_Tudo-ok:
                  summary: "Resposta: tudo ok"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso a request ocorra sem nenhum problema."
                    Saida-Real:
                      {
                        "status": 200,
                        "resposta": {
                            "tipo": "1",
                            "descricao": "Pedidos encontrados."
                        },
                        "informacoes": {
                            "itens": 11,
                            "paginas": 1,
                            "pagina_atual": 1
                        },
                        "dados": [
                            {
                                "id_pedido": 113,
                                "id_usuario": 1,
                                "id_cliente": 1,
                                "id_orcamento": 119,
                                "id_distribuidor": 2,
                                "itens": [
                                    {
                                        "id_produto": "6317-1",
                                        "id_distribuidor": 2,
                                        "preco_tabela": 5.47,
                                        "preco_aplicado": 5.44,
                                        "quantidade": 60,
                                        "estoque": 0,
                                        "desconto": 0.0,
                                        "desconto_tipo": null,
                                        "imagem": [
                                            "https://midiasmarketplace-dev.guarany.com.br/imagens/produto/150/7891150062368/knorr-massa-parafuso-500g-com-ovos/1.png",
                                            "https://midiasmarketplace-dev.guarany.com.br/imagens/produto/150/7891150062368/knorr-massa-parafuso-500g-com-ovos/2.png",
                                            "https://midiasmarketplace-dev.guarany.com.br/imagens/produto/150/7891150062368/knorr-massa-parafuso-500g-com-ovos/3.png"
                                        ],
                                        "categorizacao": [
                                            {
                                                "id_tipo": 3,
                                                "descricao_tipo": "CATEGORIAS",
                                                "grupo": [
                                                    {
                                                        "id_grupo": 227,
                                                        "descricao_grupo": "SAUDABILIDADE",
                                                        "subgrupo": [
                                                            {
                                                                "id_subgrupo": 22703,
                                                                "descricao_subgrupo": "CALDOS/SOPAS"
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ],
                                        "id_tipo": [
                                            3
                                        ],
                                        "id_grupo": [
                                            227
                                        ],
                                        "id_subgrupo": [
                                            22703
                                        ],
                                        "sku": "7891150062368",
                                        "descricao_produto": "KNORR MASSA PARAFUSO 500G COM OVOS",
                                        "id_marca": 21123,
                                        "descricao_marca": "KNORR",
                                        "status": "A",
                                        "unidade_embalagem": "CX",
                                        "quantidade_embalagem": 20,
                                        "unidade_venda": "UN",
                                        "quant_unid_venda": 1,
                                        "multiplo_venda": 20
                                    }
                                ],
                                "data_pedido": "2022-12-06 13:45:36.537000",
                                "metodo_pagamento": {
                                    "id": 1,
                                    "nome": "Boleto",
                                    "id_condpgto": 1,
                                    "descricao": "07 Dias",
                                    "percentual": -0.6,
                                    "juros": 0.0
                                },
                                "qtde_itens": 1,
                                "subtotal": 326.4,
                                "desconto": 0.0,
                                "desconto_cupom": 0.0,
                                "bonus": 0.0,
                                "liquido": 326.4,
                                "frete": 15.0,
                                "total": 341.4,
                                "status_pedido": {
                                    "0": {
                                        "etapa": "REGISTRO",
                                        "id": 3,
                                        "mensagem": "ENVIADO AO DISTRIBUIDOR.",
                                        "status": true
                                    },
                                    "1": {
                                        "etapa": "PROCESSAMENTO",
                                        "id": 1,
                                        "mensagem": "GERANDO BOLETO.",
                                        "status": true
                                    }
                                },
                                "cupom": {},
                                "bool_nf": false,
                                "pix": {
                                    "id_cobranca": 56,
                                    "txid": "71fa1ecaf1604eb5a81e010faaec9c98",
                                    "valor": 169.92,
                                    "copia_e_cola": "00020101021226770014BR.GOV.BCB.PIX2555api.itau/pix/qr/v2/a5a2dc2b-ca20-491a-937f-e8dc9a043b805204000053039865802BR5912DAG MERCHANT6009SAO PAULO62070503***6304B6EE",
                                    "expiracao": 3600,
                                    "data_expiracao": "2023-02-06 12:12:25.130000",
                                    "status": "ATIVA"
                                }
                            }
                        ]
                      }

        '400':
          description: "Erro de sintaxe do usuário"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Resposta_Dados-invalidos'
                  - $ref: '#/components/schemas/Resposta_Dados-faltantes'
                  - $ref: '#/components/schemas/Resposta_Valores-invalidos'
                  - $ref: '#/components/schemas/Resposta_Valores-nulos'
              
              examples:

                Resposta_Dados-não-encontrados:
                  summary: "Resposta: Dados não encontrados"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso a request ocorra mas não sejam encontrados os dados pedidos"
                    Saida-Real:
                      status: 400
                      resposta: 
                        tipo: 6
                        descricao: "Dados não encontrados para estes filtros."
                
                Resposta_Dados-invalidos:
                  summary: "Resposta: Dados inválidos"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Para caso a request seja feita e alguma informação inválida (tag não-esperada) seja enviada."
                    Saida-Real:
                      status: 400
                      resposta: 
                        tipo: 2
                        descricao: "Lista com as chaves que são inválidas."

                Resposta_Dados-faltantes:
                  summary: "Resposta: Dados faltantes"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Para caso a request seja feita e alguma tag obrigatoria não seja enviada."
                    Saida-Real:
                      status: 400
                      resposta: 
                        tipo: 3
                        descricao: "Lista com as chaves que estão faltando."

                Resposta_Valores-invalidos:
                  summary: "Resposta: Valores inválidos"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Para caso a request seja feita e alguma tag obrigatoria esteja com valor do tipo diferente do esperado (string serve para todos)."
                    Saida-Real:
                      status: 400
                      resposta: 
                        tipo: 4
                        descricao: "Lista com as chaves que possuem valores do tipo incorretos."

                Resposta_Valores-nulos:
                  summary: "Resposta: Valores nulos"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Para caso a request seja feita e alguma tag obrigatoria esteja com valor nulo."
                    Saida-Real:
                      status: 400
                      resposta: 
                        tipo: 14
                        descricao: "Lista com as chaves que possuem valores nulos"

        '401':
          description: "Usuário não-autenticado"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Resposta_Token-invalido'
                  - $ref: '#/components/schemas/Resposta_Token-nao-enviado'

              examples:
                
                Resposta_Token-invalido:
                  summary: "Resposta: Token inválido"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso o token seja enviado na request, ele será validado e, caso esteja inválido, será apagado e a sessão de login será encerrada."
                    Saida-Real:
                      status: 401
                      resposta: 
                        tipo: 11
                        descricao: "Token inválido."

                Resposta_Token-nao-enviado:
                  summary: "Resposta: Token não-enviado"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso o token não seja enviado na request."
                    Saida-Real:
                      status: 401
                      resposta: 
                        tipo: 13
                        descricao: "Ação recusada: Token não enviado."

        '403':
          description: "Usuário sem autorização para acessar recurso"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Resposta_Acao-especifica-negada'

              examples:

                Resposta_Acao-especifica-negada:
                  summary: "Resposta: Ação especifica negada"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso o token seja enviado na request, ele seja validado, tenha permissão suficiente mas não para realizar ação desejada."
                    Saida-Real:
                      status: 403
                      resposta: 
                        tipo: 13
                        descricao: "Ação recusada: Produto de distribuidor diferente dos permitido."
           
        '404':
          description: "Dados não-existentes"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Resposta_Dados-não-existentes'
              
              examples:
                
                Resposta_Dados-não-existentes:
                  summary: "Resposta: Dados não-existentes"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso a request ocorra mas não existam dado para serem encontrados"
                    Saida-Real:
                      status: 404
                      resposta: 
                        tipo: 7
                        descricao: "Sem dados para retornar."

  /marketplace/usuarios/eu/pedidos/registro:
  
    post:
      tags:
        - "Registro de pedido do Marketplace"
      summary: Cria um pedido para o usuario-cliente do marketplace.

      description: "
                    "

      security:
        - ApiKeyAuth: []

      requestBody:
        description: "Request Body."
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Body-request-registro-pedidos'
            examples:
              Request Comum:  # <--- Nome do Exemplo dado
                summary: Request correto
                value:
                  # vv Payload do exemplo vv
                  id_orcamento: 1
                  id_distribuidor: 1
                  cliente: 
                    - id_cliente: 1
                  metodo_pagamento:
                    - id: 1
                    - id_condpgto: 1
                  cupom:
                    - id_cupom: 2
                  qtde_itens: 4
                  subtotal: 898.35
                  desconto: 29.52
                  desconto_cupom: 14.39
                  bonus: 193.65
                  liquido: 675.18
                  frete_liquido: 0
                  total: 660.79
 
      responses:
        '200':
          description: "Sucesso na operação"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Resposta_Tudo-ok-dados'
                  - $ref: "#/components/schemas/Resposta_Tudo-ok-dados-pedido-pix"
                  - $ref: '#/components/schemas/Resposta_pedido-falhou'
              examples:
                
                Resposta_Tudo-ok-dados:
                  summary: "Resposta: tudo ok"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso a request ocorra sem nenhum problema."
                    Saida-Real:
                      status: 200
                      resposta: 
                        tipo: 1
                        descricao: "Pedido recebido com sucesso."
                      dados:
                        status: true
                        id_pedido: 1

                Resposta_Tudo-ok-dados-pedido-pix:
                  summary: "Resposta: Pedido pix registrado"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso a request ocorra sem nenhum problema."
                    Saida-Real:
                      status: 200
                      resposta: 
                        tipo: 1
                        descricao: "Pedido recebido com sucesso."
                      dados:
                        status: true
                        id_pedido: 1
                        "pix": {
                                  "txid": "cfdfca16b326493a8021690c7c03d05c",
                                  "valor": 169.92,
                                  "copia_e_cola": "00020101021226770014BR.GOV.BCB.PIX2555api.itau/pix/qr/v2/7ad086dd-c8d8-408a-a3d8-ead627e9bdd55204000053039865802BR5912DAG MERCHANT6009SAO PAULO62070503***6304D0D1",
                                  "expiracao": 3600,
                                  "data_expiracao": "2023-02-02 09:38:07.700",
                                  "status": "ATIVA",
                                  "id_cobranca": 5
                              }

                Resposta_pedido-falhou:
                  summary: "Resposta: Pedido Falhou"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso a request ocorra e o registro do pedido falhe."
                    Saida-Real:
                      status: 200
                      resposta: 
                        tipo: 15
                        descricao: "Pedido não-registrado."
                      dados:
                        status: false
                        id_pedido: null
                        id_motivo: 15
                        motivo: cupom invalidado por (motivo especifico)

        '400':
          description: "Erro de sintaxe do usuário"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Resposta_Dados-invalidos'
                  - $ref: '#/components/schemas/Resposta_Dados-faltantes'
                  - $ref: '#/components/schemas/Resposta_Valores-invalidos'
                  - $ref: '#/components/schemas/Resposta_Valores-nulos'
              
              examples:
                
                Resposta_Dados-invalidos:
                  summary: "Resposta: Dados inválidos"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Para caso a request seja feita e alguma informação inválida (tag não-esperada) seja enviada."
                    Saida-Real:
                      status: 400
                      resposta: 
                        tipo: 2
                        descricao: "Lista com as chaves que são inválidas."

                Resposta_Dados-faltantes:
                  summary: "Resposta: Dados faltantes"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Para caso a request seja feita e alguma tag obrigatoria não seja enviada."
                    Saida-Real:
                      status: 400
                      resposta: 
                        tipo: 3
                        descricao: "Lista com as chaves que estão faltando."

                Resposta_Valores-invalidos:
                  summary: "Resposta: Valores inválidos"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Para caso a request seja feita e alguma tag obrigatoria esteja com valor do tipo diferente do esperado (string serve para todos)."
                    Saida-Real:
                      status: 400
                      resposta: 
                        tipo: 4
                        descricao: "Lista com as chaves que possuem valores do tipo incorretos."

                Resposta_Valores-nulos:
                  summary: "Resposta: Valores nulos"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Para caso a request seja feita e alguma tag obrigatoria esteja com valor nulo."
                    Saida-Real:
                      status: 400
                      resposta: 
                        tipo: 14
                        descricao: "Lista com as chaves que possuem valores nulos"

        '401':
          description: "Usuário não-autenticado"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Resposta_Token-invalido'
                  - $ref: '#/components/schemas/Resposta_Token-nao-enviado'

              examples:
                
                Resposta_Token-invalido:
                  summary: "Resposta: Token inválido"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso o token seja enviado na request, ele será validado e, caso esteja inválido, será apagado e a sessão de login será encerrada."
                    Saida-Real:
                      status: 401
                      resposta: 
                        tipo: 11
                        descricao: "Token inválido."

                Resposta_Token-nao-enviado:
                  summary: "Resposta: Token não-enviado"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso o token não seja enviado na request."
                    Saida-Real:
                      status: 401
                      resposta: 
                        tipo: 13
                        descricao: "Ação recusada: Token não enviado."

        '403':
          description: "Usuário sem autorização para acessar recurso"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Resposta_Acao-especifica-negada'

              examples:

                Resposta_Acao-especifica-negada:
                  summary: "Resposta: Ação especifica negada"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso o token seja enviado na request, ele seja validado, tenha permissão suficiente mas não para realizar ação desejada."
                    Saida-Real:
                      status: 403
                      resposta: 
                        tipo: 13
                        descricao: "Ação recusada: Produto de distribuidor diferente dos permitido."
  
  /marketplace/usuarios/eu/pedidos/financeiro:
  
    post:
      tags:
        - "Listagem de boletos dos pedidos do Marketplace"
      summary: Lista os boletos para o usuario-cliente do marketplace.

      description: >
                      Lista informações dos boletos de um pedido para o usuario e explicita a possibilidade de envio para o email

      security:
        - ApiKeyAuth: []

      requestBody:
        description: "Request Body."
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Body-request-listar-boletos'
            examples:
              Request Comum:  # <--- Nome do Exemplo dado
                summary: Request correto
                value:
                  # vv Payload do exemplo vv
                  id_cliente: 1
                  id_distribuidor: []
                  busca: ""
                  data_pedido_de: "1900-01-01"
                  data_pedido_ate: "3000-01-01"
                  status: "EM ABERTO"
                  pagina: 1
                  limite: 1
 
      responses:
        '200':
          description: "Sucesso na operação"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Resposta_Tudo-ok-dados'

              examples:
                
                Resposta_Tudo-ok-dados:
                  summary: "Resposta: tudo ok com dados"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso a request ocorra sem nenhum problema."
                    Saida-Real:
                      status: 200
                      resposta: 
                        tipo: 1
                        descricao: "Pedido recebido com sucesso."
                      dados: [
                                {
                                    "id_pedido": 110,
                                    "id_distribuidor": 1,
                                    "id_cliente": 7101,
                                    "id_formapgto": 1,
                                    "forma_pagamento": "BOLETO",
                                    "id_condpgto": 1,
                                    "condicao_pagamento": "07 DIAS",
                                    "valor_total": 1155.0,
                                    "saldo_total": 0.0,
                                    "nota_fiscal": null,
                                    "serie": null,
                                    "bool_nf": false,
                                    "status": "CANCELADO",
                                    "boletos": [
                                        {
                                            "parcela": 1,
                                            "titulo": "7000823407",
                                            "codigo_barra": "23792.36702 20000.063840 98000.180004 1 91560000256951",
                                            "valor_boleto": 385.0,
                                            "valor_restante": 0.0,
                                            "dias_atraso": 0,
                                            "data_vencimento": "2022-11-01",
                                            "data_pagamento": "2022-11-01",
                                            "data_baixa": "2022-11-01",
                                            "status": "CANCELADO"
                                        },
                                        {
                                            "parcela": 2,
                                            "titulo": "7000823407",
                                            "codigo_barra": "23792.36702 20000.063840 98000.180004 1 91560000256951",
                                            "valor_boleto": 385.0,
                                            "valor_restante": 0.0,
                                            "dias_atraso": 0,
                                            "data_vencimento": "2022-11-01",
                                            "data_pagamento": "2022-11-01",
                                            "data_baixa": "2022-11-01",
                                            "status": "CANCELADO"
                                        },
                                        {
                                            "parcela": 3,
                                            "titulo": "7000823407",
                                            "codigo_barra": "23792.36702 20000.063840 98000.180004 1 91560000256951",
                                            "valor_boleto": 385.0,
                                            "valor_restante": 0.0,
                                            "dias_atraso": 0,
                                            "data_vencimento": "2022-11-01",
                                            "data_pagamento": "2022-11-01",
                                            "data_baixa": "2022-11-01",
                                            "status": "CANCELADO"
                                        }
                                    ]
                                }
                            ]

        '400':
          description: "Erro de sintaxe do usuário"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Resposta_Dados-invalidos'
                  - $ref: '#/components/schemas/Resposta_Dados-faltantes'
                  - $ref: '#/components/schemas/Resposta_Valores-invalidos'
                  - $ref: '#/components/schemas/Resposta_Valores-nulos'
              
              examples:

                Resposta_Dados-não-encontrados:
                  summary: "Resposta: Dados não encontrados"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso a request ocorra mas não sejam encontrados os dados pedidos"
                    Saida-Real:
                      status: 400
                      resposta: 
                        tipo: 6
                        descricao: "Dados não encontrados para estes filtros."
                
                Resposta_Dados-invalidos:
                  summary: "Resposta: Dados inválidos"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Para caso a request seja feita e alguma informação inválida (tag não-esperada) seja enviada."
                    Saida-Real:
                      status: 400
                      resposta: 
                        tipo: 2
                        descricao: "Lista com as chaves que são inválidas."

                Resposta_Dados-faltantes:
                  summary: "Resposta: Dados faltantes"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Para caso a request seja feita e alguma tag obrigatoria não seja enviada."
                    Saida-Real:
                      status: 400
                      resposta: 
                        tipo: 3
                        descricao: "Lista com as chaves que estão faltando."

                Resposta_Valores-invalidos:
                  summary: "Resposta: Valores inválidos"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Para caso a request seja feita e alguma tag obrigatoria esteja com valor do tipo diferente do esperado (string serve para todos)."
                    Saida-Real:
                      status: 400
                      resposta: 
                        tipo: 4
                        descricao: "Lista com as chaves que possuem valores do tipo incorretos."

                Resposta_Valores-nulos:
                  summary: "Resposta: Valores nulos"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Para caso a request seja feita e alguma tag obrigatoria esteja com valor nulo."
                    Saida-Real:
                      status: 400
                      resposta: 
                        tipo: 14
                        descricao: "Lista com as chaves que possuem valores nulos"

        '401':
          description: "Usuário não-autenticado"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Resposta_Token-invalido'
                  - $ref: '#/components/schemas/Resposta_Token-nao-enviado'

              examples:
                
                Resposta_Token-invalido:
                  summary: "Resposta: Token inválido"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso o token seja enviado na request, ele será validado e, caso esteja inválido, será apagado e a sessão de login será encerrada."
                    Saida-Real:
                      status: 401
                      resposta: 
                        tipo: 11
                        descricao: "Token inválido."

                Resposta_Token-nao-enviado:
                  summary: "Resposta: Token não-enviado"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso o token não seja enviado na request."
                    Saida-Real:
                      status: 401
                      resposta: 
                        tipo: 13
                        descricao: "Ação recusada: Token não enviado."

        '403':
          description: "Usuário sem autorização para acessar recurso"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Resposta_Acao-especifica-negada'

              examples:

                Resposta_Acao-especifica-negada:
                  summary: "Resposta: Ação especifica negada"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso o token seja enviado na request, ele seja validado, tenha permissão suficiente mas não para realizar ação desejada."
                    Saida-Real:
                      status: 403
                      resposta: 
                        tipo: 13
                        descricao: "Ação recusada: Produto de distribuidor diferente dos permitido."
           
        '404':
          description: "Dados não-existentes"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Resposta_Dados-não-existentes'
              
              examples:
                
                Resposta_Dados-não-existentes:
                  summary: "Resposta: Dados não-existentes"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso a request ocorra mas não existam dado para serem encontrados"
                    Saida-Real:
                      status: 404
                      resposta: 
                        tipo: 7
                        descricao: "Sem dados para retornar."

  /marketplace/usuarios/eu/pedidos/notas-fiscais:
  
    post:
      tags:
        - "Envio de notas fiscais do pedido"
      summary: Envio de DANFE para o email

      description: >
                      Envia para o email do usuario o XML e Notas fiscais do pedido. Caso o pedido possua produtos
                      bonificados, serão enviados dois emails: Um com os produtos pagos e outro com todos os bonificados.

      security:
        - ApiKeyAuth: []

      requestBody:
        description: "Request Body."
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Body-request-envio-notas-fiscais'
            examples:
              Request Comum:  # <--- Nome do Exemplo dado
                summary: Request correto
                value:
                  # vv Payload do exemplo vv
                  id_cliente: 7101
                  id_pedido: 110
 
      responses:
        '200':
          description: "Sucesso na operação"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Resposta_Tudo-ok'
                  - $ref: '#/components/schemas/Resposta_Erro-generico'

              examples:
                
                Resposta_Tudo-ok:
                  summary: "Resposta: tudo ok"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso a request ocorra sem nenhum problema."
                    Saida-Real:
                      status: 200
                      resposta: 
                        tipo: 1
                        descricao: "Notas fiscais enviadas para o email."
                
                Resposta_Erro-generico:
                  summary: "Resposta: Erro genérico"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: Caso um erro especifico aconteca.
                    Saida-Real:
                      status: 200
                      resposta: 
                        tipo: 18
                        descricao: Houveram erros com o envio de boleto. Por favor, tente novamente mais tarde.

        '400':
          description: "Erro de sintaxe do usuário"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Resposta_Dados-invalidos'
                  - $ref: '#/components/schemas/Resposta_Dados-faltantes'
                  - $ref: '#/components/schemas/Resposta_Valores-invalidos'
                  - $ref: '#/components/schemas/Resposta_Valores-nulos'
              
              examples:

                Resposta_Dados-não-encontrados:
                  summary: "Resposta: Dados não encontrados"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso a request ocorra mas não sejam encontrados os dados pedidos"
                    Saida-Real:
                      status: 400
                      resposta: 
                        tipo: 6
                        descricao: "Dados não encontrados para estes filtros."
                
                Resposta_Dados-invalidos:
                  summary: "Resposta: Dados inválidos"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Para caso a request seja feita e alguma informação inválida (tag não-esperada) seja enviada."
                    Saida-Real:
                      status: 400
                      resposta: 
                        tipo: 2
                        descricao: "Lista com as chaves que são inválidas."

                Resposta_Dados-faltantes:
                  summary: "Resposta: Dados faltantes"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Para caso a request seja feita e alguma tag obrigatoria não seja enviada."
                    Saida-Real:
                      status: 400
                      resposta: 
                        tipo: 3
                        descricao: "Lista com as chaves que estão faltando."

                Resposta_Valores-invalidos:
                  summary: "Resposta: Valores inválidos"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Para caso a request seja feita e alguma tag obrigatoria esteja com valor do tipo diferente do esperado (string serve para todos)."
                    Saida-Real:
                      status: 400
                      resposta: 
                        tipo: 4
                        descricao: "Lista com as chaves que possuem valores do tipo incorretos."

                Resposta_Valores-nulos:
                  summary: "Resposta: Valores nulos"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Para caso a request seja feita e alguma tag obrigatoria esteja com valor nulo."
                    Saida-Real:
                      status: 400
                      resposta: 
                        tipo: 14
                        descricao: "Lista com as chaves que possuem valores nulos"

        '401':
          description: "Usuário não-autenticado"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Resposta_Token-invalido'
                  - $ref: '#/components/schemas/Resposta_Token-nao-enviado'

              examples:
                
                Resposta_Token-invalido:
                  summary: "Resposta: Token inválido"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso o token seja enviado na request, ele será validado e, caso esteja inválido, será apagado e a sessão de login será encerrada."
                    Saida-Real:
                      status: 401
                      resposta: 
                        tipo: 11
                        descricao: "Token inválido."

                Resposta_Token-nao-enviado:
                  summary: "Resposta: Token não-enviado"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso o token não seja enviado na request."
                    Saida-Real:
                      status: 401
                      resposta: 
                        tipo: 13
                        descricao: "Ação recusada: Token não enviado."

  /marketplace/usuarios/eu/pedidos/boletos:
  
    post:
      tags:
        - "Envio de boletos do pedido"
      summary: Envio de boleto para o email

      description: >
                      Envia para o email do usuario o Boleto do pedido somente dos produtos de venda. Caso o pedido possua produtos
                      bonificados, será enviado somente um email com relação a nota fiscal dos produtos de venda.

      security:
        - ApiKeyAuth: []

      requestBody:
        description: "Request Body."
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Body-request-envio-boletos'
            examples:
              Request Comum:  # <--- Nome do Exemplo dado
                summary: Request correto
                value:
                  # vv Payload do exemplo vv
                  id_cliente: 7101
                  id_pedido: 110


      responses:
        '200':
          description: "Sucesso na operação"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Resposta_Tudo-ok'
                  - $ref: '#/components/schemas/Resposta_Erro-generico'

              examples:
                
                Resposta_Tudo-ok:
                  summary: "Resposta: tudo ok"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso a request ocorra sem nenhum problema."
                    Saida-Real:
                      status: 200
                      resposta: 
                        tipo: 1
                        descricao: "Boletos enviados para o email."
                
                Resposta_Erro-generico:
                  summary: "Resposta: Erro genérico"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: Caso um erro especifico aconteca.
                    Saida-Real:
                      status: 200
                      resposta: 
                        tipo: 18
                        descricao: "Houveram erros com o envio de nota fiscal. Por favor tente novamente mais tarde."

        '400':
          description: "Erro de sintaxe do usuário"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Resposta_Dados-invalidos'
                  - $ref: '#/components/schemas/Resposta_Dados-faltantes'
                  - $ref: '#/components/schemas/Resposta_Valores-invalidos'
                  - $ref: '#/components/schemas/Resposta_Valores-nulos'
              
              examples:

                Resposta_Dados-não-encontrados:
                  summary: "Resposta: Dados não encontrados"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso a request ocorra mas não sejam encontrados os dados pedidos"
                    Saida-Real:
                      status: 400
                      resposta: 
                        tipo: 6
                        descricao: "Dados não encontrados para estes filtros."
                
                Resposta_Dados-invalidos:
                  summary: "Resposta: Dados inválidos"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Para caso a request seja feita e alguma informação inválida (tag não-esperada) seja enviada."
                    Saida-Real:
                      status: 400
                      resposta: 
                        tipo: 2
                        descricao: "Lista com as chaves que são inválidas."

                Resposta_Dados-faltantes:
                  summary: "Resposta: Dados faltantes"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Para caso a request seja feita e alguma tag obrigatoria não seja enviada."
                    Saida-Real:
                      status: 400
                      resposta: 
                        tipo: 3
                        descricao: "Lista com as chaves que estão faltando."

                Resposta_Valores-invalidos:
                  summary: "Resposta: Valores inválidos"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Para caso a request seja feita e alguma tag obrigatoria esteja com valor do tipo diferente do esperado (string serve para todos)."
                    Saida-Real:
                      status: 400
                      resposta: 
                        tipo: 4
                        descricao: "Lista com as chaves que possuem valores do tipo incorretos."

                Resposta_Valores-nulos:
                  summary: "Resposta: Valores nulos"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Para caso a request seja feita e alguma tag obrigatoria esteja com valor nulo."
                    Saida-Real:
                      status: 400
                      resposta: 
                        tipo: 14
                        descricao: "Lista com as chaves que possuem valores nulos"

        '401':
          description: "Usuário não-autenticado"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Resposta_Token-invalido'
                  - $ref: '#/components/schemas/Resposta_Token-nao-enviado'

              examples:
                
                Resposta_Token-invalido:
                  summary: "Resposta: Token inválido"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso o token seja enviado na request, ele será validado e, caso esteja inválido, será apagado e a sessão de login será encerrada."
                    Saida-Real:
                      status: 401
                      resposta: 
                        tipo: 11
                        descricao: "Token inválido."

                Resposta_Token-nao-enviado:
                  summary: "Resposta: Token não-enviado"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso o token não seja enviado na request."
                    Saida-Real:
                      status: 401
                      resposta: 
                        tipo: 13
                        descricao: "Ação recusada: Token não enviado."

  /marketplace/usuarios/eu/pedidos/pix:
    post:
      tags:
        - "Checagem de status do pix"
      summary: Checa a situação atual do pix.

      description: >
                      - Verifica o status do pix e caso o mesmo venha a expirar, cria uma nova cobrança para o pedido.

      security:
        - ApiKeyAuth: []

      requestBody:
        description: "Request Body."
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Body-request-checar-status-pix'
            examples:
              Listagem Comum:  # <--- Nome do Exemplo dado
                summary: Listagem correta
                value:
                  # vv Payload do exemplo vv
                  id_pedido: 1
                  id_cliente: 2
 
      responses:
        '200':
          description: "Sucesso na operação"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Resposta_Tudo-ok-dados'
              
              examples:
                
                Resposta_Tudo-ok-dados:
                  summary: "Resposta: tudo ok com dados"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso a request ocorra sem nenhum problema."
                    Saida-Real:
                      status: 200
                      resposta: 
                        tipo: 1
                        descricao: "Informações do pix enviado"
                      dados: {
                                "txid": "c5da0c20318d4d4284f73aa0783aab41",
                                "copia_e_cola": "00020101021226770014BR.GOV.BCB.PIX2555api.itau/pix/qr/v2/9566bac3-1af9-433b-94d7-4837189abc8a5204000053039865802BR5912DAG MERCHANT6009SAO PAULO62070503***6304FF58",
                                "data_expiracao": "2023-01-31 17:41:50.980",
                                "valor": 169.92,
                                "status": "ATIVA"
                            }

        '400':
          description: "Erro de sintaxe do usuário"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Resposta_Acao-especifica-negada-erro'
                  - $ref: '#/components/schemas/Resposta_Dados-invalidos'
                  - $ref: '#/components/schemas/Resposta_Dados-faltantes'
                  - $ref: '#/components/schemas/Resposta_Valores-invalidos'
                  - $ref: '#/components/schemas/Resposta_Valores-nulos'
              
              examples:

                Resposta_Acao-especifica-negada-erro:
                  summary: "Resposta: Ação especifica negada por erro"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso o token seja enviado na request, ele seja validado, tenha permissão de realizar ação, mas tente fazer algo que não pode acontecer."
                    Saida-Real:
                      status: 400
                      resposta: 
                        tipo: 13
                        descricao: "Ação recusada: Usuário não solicitou alteração senha."
                
                Resposta_Dados-invalidos:
                  summary: "Resposta: Dados inválidos"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Para caso a request seja feita e alguma informação inválida (tag não-esperada) seja enviada."
                    Saida-Real:
                      status: 400
                      resposta: 
                        tipo: 2
                        descricao: "Lista com as chaves que são inválidas."

                Resposta_Dados-faltantes:
                  summary: "Resposta: Dados faltantes"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Para caso a request seja feita e alguma tag obrigatoria não seja enviada."
                    Saida-Real:
                      status: 400
                      resposta: 
                        tipo: 3
                        descricao: "Lista com as chaves que estão faltando."

                Resposta_Valores-invalidos:
                  summary: "Resposta: Valores inválidos"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Para caso a request seja feita e alguma tag obrigatoria esteja com valor do tipo diferente do esperado (string serve para todos)."
                    Saida-Real:
                      status: 400
                      resposta: 
                        tipo: 4
                        descricao: "Lista com as chaves que possuem valores do tipo incorretos."

                Resposta_Valores-nulos:
                  summary: "Resposta: Valores nulos"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Para caso a request seja feita e alguma tag obrigatoria esteja com valor nulo."
                    Saida-Real:
                      status: 400
                      resposta: 
                        tipo: 14
                        descricao: "Lista com as chaves que possuem valores nulos"

        '401':
          description: "Usuário não-autenticado"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Resposta_Token-invalido'
                  - $ref: '#/components/schemas/Resposta_Token-nao-enviado'

              examples:
                
                Resposta_Token-invalido:
                  summary: "Resposta: Token inválido"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso o token seja enviado na request, ele será validado e, caso esteja inválido, será apagado e a sessão de login será encerrada."
                    Saida-Real:
                      status: 401
                      resposta: 
                        tipo: 11
                        descricao: "Token inválido."

                Resposta_Token-nao-enviado:
                  summary: "Resposta: Token não-enviado"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso o token não seja enviado na request."
                    Saida-Real:
                      status: 401
                      resposta: 
                        tipo: 13
                        descricao: "Ação recusada: Token não enviado."

        '403':
          description: "Usuário sem autorização para acessar recurso"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Resposta_Acao-especifica-negada'

              examples:

                Resposta_Acao-especifica-negada:
                  summary: "Resposta: Ação especifica negada"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso o token seja enviado na request, ele seja validado, tenha permissão suficiente mas não para realizar ação desejada."
                    Saida-Real:
                      status: 403
                      resposta: 
                        tipo: 13
                        descricao: "Ação recusada: Usuario tentando realizar ação por cliente não atrelado ao mesmo."

  /marketplace/usuarios/eu/favoritos:

    post:
      tags:
        - "Listar favoritos do usuario marketplace"
      summary: Lista os favoritos de um usuario.

      description: >
                      - Lista os produtos favoritos do usuario que o cliente pode ver

      security:
        - ApiKeyAuth: []

      requestBody:
        description: "Request Body."
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Body-request-listar-favoritos'
            examples:
              Listagem Comum:  # <--- Nome do Exemplo dado
                summary: Listagem correta
                value:
                  # vv Payload do exemplo vv
                  id_distribuidor: 0
                  id_cliente: 1
                  ordenar: 4
                  estoque: false
                  desconto: false
                  tipo_oferta: 0
                  marca: [10622]
                  grupos: []
                  subgrupos: []
                  pagina: 1
                  limite: 20
 
      responses:
        '200':
          description: "Sucesso na operação"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Resposta_Tudo-ok-paginado'
              
              examples:
                
                Resposta_Tudo-ok-paginado:
                  summary: "Resposta: tudo ok com dados paginados"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso a request ocorra sem nenhum problema."
                    Saida-Real:
                      status: 200
                      resposta: 
                        tipo: 1
                        descricao: "Objeto com os produtos dos ultimos vistos e outro com as marcas."
                      informacoes: 
                        itens: 0
                        paginas: 0
                        pagina_atual: 0
                      dados:
                        produtos: "Lista com os produtos"
                        marcas: "Lista com os marcas"

        '400':
          description: "Erro de sintaxe do usuário"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Resposta_Dados-invalidos'
                  - $ref: '#/components/schemas/Resposta_Dados-faltantes'
                  - $ref: '#/components/schemas/Resposta_Valores-invalidos'
                  - $ref: '#/components/schemas/Resposta_Valores-nulos'
              
              examples:
                
                Resposta_Dados-invalidos:
                  summary: "Resposta: Dados inválidos"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Para caso a request seja feita e alguma informação inválida (tag não-esperada) seja enviada."
                    Saida-Real:
                      status: 400
                      resposta: 
                        tipo: 2
                        descricao: "Lista com as chaves que são inválidas."

                Resposta_Dados-faltantes:
                  summary: "Resposta: Dados faltantes"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Para caso a request seja feita e alguma tag obrigatoria não seja enviada."
                    Saida-Real:
                      status: 400
                      resposta: 
                        tipo: 3
                        descricao: "Lista com as chaves que estão faltando."

                Resposta_Valores-invalidos:
                  summary: "Resposta: Valores inválidos"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Para caso a request seja feita e alguma tag obrigatoria esteja com valor do tipo diferente do esperado (string serve para todos)."
                    Saida-Real:
                      status: 400
                      resposta: 
                        tipo: 4
                        descricao: "Lista com as chaves que possuem valores do tipo incorretos."

                Resposta_Valores-nulos:
                  summary: "Resposta: Valores nulos"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Para caso a request seja feita e alguma tag obrigatoria esteja com valor nulo."
                    Saida-Real:
                      status: 400
                      resposta: 
                        tipo: 14
                        descricao: "Lista com as chaves que possuem valores nulos"

        '401':
          description: "Usuário não-autenticado"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Resposta_Token-invalido'
                  - $ref: '#/components/schemas/Resposta_Token-nao-enviado'

              examples:
                
                Resposta_Token-invalido:
                  summary: "Resposta: Token inválido"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso o token seja enviado na request, ele será validado e, caso esteja inválido, será apagado e a sessão de login será encerrada."
                    Saida-Real:
                      status: 401
                      resposta: 
                        tipo: 11
                        descricao: "Token inválido."

                Resposta_Token-nao-enviado:
                  summary: "Resposta: Token não-enviado"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso o token não seja enviado na request."
                    Saida-Real:
                      status: 401
                      resposta: 
                        tipo: 13
                        descricao: "Ação recusada: Token não enviado."

        '403':
          description: "Usuário sem autorização para acessar recurso"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Resposta_Acao-especifica-negada'

              examples:

                Resposta_Acao-especifica-negada:
                  summary: "Resposta: Ação especifica negada"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso o token seja enviado na request, ele seja validado, tenha permissão suficiente mas não para realizar ação desejada."
                    Saida-Real:
                      status: 403
                      resposta: 
                        tipo: 13
                        descricao: "Ação recusada: Usuario tentando realizar ação por cliente não atrelado ao mesmo."

        '404':
          description: "Dados não-existentes"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Resposta_Dados-não-existentes'
              
              examples:
                
                Resposta_Dados-não-existentes:
                  summary: "Resposta: Dados não-existentes"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso a request ocorra mas não existam dado para serem encontrados"
                    Saida-Real:
                      status: 404
                      resposta: 
                        tipo: 7
                        descricao: "Sem dados para retornar." 

  /marketplace/usuarios/eu/favoritos/registro:

    post:
      tags:
        - "Registro de favoritos do usuario marketplace"
      summary: Salva o favorito de um usuario.

      description: >
                      - Salva um produto nos favoritos do usuario

      security:
        - ApiKeyAuth: []

      requestBody:
        description: "Request Body."
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Body-request-registro-favoritos'
            examples:
              Salvamento Comum:  # <--- Nome do Exemplo dado
                summary: Salvamento correto
                value:
                  # vv Payload do exemplo vv
                  id_cliente: "1"
                  id_produto: "100-1"
 
      responses:
        '200':
          description: "Sucesso na operação"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Resposta_Tudo-ok'
              
              examples:
                
                Resposta_Tudo-ok:
                  summary: "Resposta: tudo ok"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso a request ocorra sem nenhum problema."
                    Saida-Real:
                      status: 200
                      resposta: 
                        tipo: 1
                        descricao: "Favoritos modificados com sucesso"

        '400':
          description: "Erro de sintaxe do usuário"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Resposta_Dados-invalidos'
                  - $ref: '#/components/schemas/Resposta_Dados-faltantes'
                  - $ref: '#/components/schemas/Resposta_Valores-invalidos'
                  - $ref: '#/components/schemas/Resposta_Valores-nulos'
              
              examples:
                
                Resposta_Dados-invalidos:
                  summary: "Resposta: Dados inválidos"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Para caso a request seja feita e alguma informação inválida (tag não-esperada) seja enviada."
                    Saida-Real:
                      status: 400
                      resposta: 
                        tipo: 2
                        descricao: "Lista com as chaves que são inválidas."

                Resposta_Dados-faltantes:
                  summary: "Resposta: Dados faltantes"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Para caso a request seja feita e alguma tag obrigatoria não seja enviada."
                    Saida-Real:
                      status: 400
                      resposta: 
                        tipo: 3
                        descricao: "Lista com as chaves que estão faltando."

                Resposta_Valores-invalidos:
                  summary: "Resposta: Valores inválidos"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Para caso a request seja feita e alguma tag obrigatoria esteja com valor do tipo diferente do esperado (string serve para todos)."
                    Saida-Real:
                      status: 400
                      resposta: 
                        tipo: 4
                        descricao: "Lista com as chaves que possuem valores do tipo incorretos."

                Resposta_Valores-nulos:
                  summary: "Resposta: Valores nulos"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Para caso a request seja feita e alguma tag obrigatoria esteja com valor nulo."
                    Saida-Real:
                      status: 400
                      resposta: 
                        tipo: 14
                        descricao: "Lista com as chaves que possuem valores nulos"

        '401':
          description: "Usuário não-autenticado"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Resposta_Token-invalido'
                  - $ref: '#/components/schemas/Resposta_Token-nao-enviado'

              examples:
                
                Resposta_Token-invalido:
                  summary: "Resposta: Token inválido"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso o token seja enviado na request, ele será validado e, caso esteja inválido, será apagado e a sessão de login será encerrada."
                    Saida-Real:
                      status: 401
                      resposta: 
                        tipo: 11
                        descricao: "Token inválido."

                Resposta_Token-nao-enviado:
                  summary: "Resposta: Token não-enviado"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso o token não seja enviado na request."
                    Saida-Real:
                      status: 401
                      resposta: 
                        tipo: 13
                        descricao: "Ação recusada: Token não enviado."

        '403':
          description: "Usuário sem autorização para acessar recurso"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Resposta_Acao-especifica-negada'

              examples:

                Resposta_Acao-especifica-negada:
                  summary: "Resposta: Ação especifica negada"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso o token seja enviado na request, ele seja validado, tenha permissão suficiente mas não para realizar ação desejada."
                    Saida-Real:
                      status: 403
                      resposta: 
                        tipo: 13
                        descricao: "Ação recusada: Usuario tentando realizar ação por cliente não atrelado ao mesmo."

  /marketplace/usuarios/eu/favoritos/remocao:

    post:
      tags:
        - "Remocao de favoritos do usuario marketplace"
      summary: Remove o favorito de um usuario.

      description: >
                      - Deleta um produto nos favoritos do usuario

      security:
        - ApiKeyAuth: []

      requestBody:
        description: "Request Body."
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Body-request-remocao-favoritos'
            examples:
              Request Comum:  # <--- Nome do Exemplo dado
                summary: Request correto
                value:
                  # vv Payload do exemplo vv
                  id_produto: "100-1"
 
      responses:
        '200':
          description: "Sucesso na operação"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Resposta_Tudo-ok'
              
              examples:
                
                Resposta_Tudo-ok:
                  summary: "Resposta: tudo ok"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso a request ocorra sem nenhum problema."
                    Saida-Real:
                      status: 200
                      resposta: 
                        tipo: 1
                        descricao: "Produto deletado dos favoritos do usuario."

        '400':
          description: "Erro de sintaxe do usuário"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Resposta_Dados-invalidos'
                  - $ref: '#/components/schemas/Resposta_Dados-faltantes'
                  - $ref: '#/components/schemas/Resposta_Valores-invalidos'
                  - $ref: '#/components/schemas/Resposta_Valores-nulos'
              
              examples:
                
                Resposta_Dados-invalidos:
                  summary: "Resposta: Dados inválidos"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Para caso a request seja feita e alguma informação inválida (tag não-esperada) seja enviada."
                    Saida-Real:
                      status: 400
                      resposta: 
                        tipo: 2
                        descricao: "Lista com as chaves que são inválidas."

                Resposta_Dados-faltantes:
                  summary: "Resposta: Dados faltantes"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Para caso a request seja feita e alguma tag obrigatoria não seja enviada."
                    Saida-Real:
                      status: 400
                      resposta: 
                        tipo: 3
                        descricao: "Lista com as chaves que estão faltando."

                Resposta_Valores-invalidos:
                  summary: "Resposta: Valores inválidos"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Para caso a request seja feita e alguma tag obrigatoria esteja com valor do tipo diferente do esperado (string serve para todos)."
                    Saida-Real:
                      status: 400
                      resposta: 
                        tipo: 4
                        descricao: "Lista com as chaves que possuem valores do tipo incorretos."

                Resposta_Valores-nulos:
                  summary: "Resposta: Valores nulos"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Para caso a request seja feita e alguma tag obrigatoria esteja com valor nulo."
                    Saida-Real:
                      status: 400
                      resposta: 
                        tipo: 14
                        descricao: "Lista com as chaves que possuem valores nulos"

        '401':
          description: "Usuário não-autenticado"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Resposta_Token-invalido'
                  - $ref: '#/components/schemas/Resposta_Token-nao-enviado'

              examples:
                
                Resposta_Token-invalido:
                  summary: "Resposta: Token inválido"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso o token seja enviado na request, ele será validado e, caso esteja inválido, será apagado e a sessão de login será encerrada."
                    Saida-Real:
                      status: 401
                      resposta: 
                        tipo: 11
                        descricao: "Token inválido."

                Resposta_Token-nao-enviado:
                  summary: "Resposta: Token não-enviado"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso o token não seja enviado na request."
                    Saida-Real:
                      status: 401
                      resposta: 
                        tipo: 13
                        descricao: "Ação recusada: Token não enviado."

  /marketplace/usuarios/eu/ultimos-vistos:

    post:
      tags:
        - "Listagem dos ultimos vistos do marketplace"
      summary: Lista os produtos nos ultimos vistos do usuario-cliente.

      description: >
                      Lista os ultimos vistos do usuario-cliente para um distribuidor especifico

      security:
        - ApiKeyAuth: []

      requestBody:
        description: "Request Body."
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Body-request-listar-ultimos-vistos'
            examples:
              Request Comum:  # <--- Nome do Exemplo dado
                summary: Request correto
                value:
                  # vv Payload do exemplo vv
                  id_distribuidor: 0
                  id_cliente: 1
                  ordenar: 4
                  estoque: false
                  desconto: false
                  tipo_oferta: 0
                  marca: [10622]
                  grupos: []
                  subgrupos: []
                  pagina: 1
                  limite: 20
 
      responses:

        '200':
          description: "Recurso Criado"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Resposta_Tudo-ok-dados'

              examples:
                
                Resposta_Tudo-ok-dados:
                  summary: "Resposta: tudo ok com dados"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso a request ocorra sem nenhum problema."
                    Saida-Real:
                      status: 200
                      resposta: 
                        tipo: 1
                        descricao: "Objeto com os produtos dos ultimos vistos e outro com as marcas."
                      dados:
                        produtos: "Lista com os produtos"
                        marcas: "Lista com os marcas"

        '400':
          description: "Erro de sintaxe do usuário"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Resposta_Dados-invalidos'
                  - $ref: '#/components/schemas/Resposta_Dados-faltantes'
                  - $ref: '#/components/schemas/Resposta_Valores-invalidos'
                  - $ref: '#/components/schemas/Resposta_Valores-nulos'
              
              examples:
                
                Resposta_Dados-invalidos:
                  summary: "Resposta: Dados inválidos"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Para caso a request seja feita e alguma informação inválida (tag não-esperada) seja enviada."
                    Saida-Real:
                      status: 400
                      resposta: 
                        tipo: 2
                        descricao: "Lista com as chaves que são inválidas."

                Resposta_Dados-faltantes:
                  summary: "Resposta: Dados faltantes"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Para caso a request seja feita e alguma tag obrigatoria não seja enviada."
                    Saida-Real:
                      status: 400
                      resposta: 
                        tipo: 3
                        descricao: "Lista com as chaves que estão faltando."

                Resposta_Valores-invalidos:
                  summary: "Resposta: Valores inválidos"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Para caso a request seja feita e alguma tag obrigatoria esteja com valor do tipo diferente do esperado (string serve para todos)."
                    Saida-Real:
                      status: 400
                      resposta: 
                        tipo: 4
                        descricao: "Lista com as chaves que possuem valores do tipo incorretos."

                Resposta_Valores-nulos:
                  summary: "Resposta: Valores nulos"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Para caso a request seja feita e alguma tag obrigatoria esteja com valor nulo."
                    Saida-Real:
                      status: 400
                      resposta: 
                        tipo: 14
                        descricao: "Lista com as chaves que possuem valores nulos"

        '401':
          description: "Usuário não-autenticado"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Resposta_Token-invalido'
                  - $ref: '#/components/schemas/Resposta_Token-nao-enviado'

              examples:
                
                Resposta_Token-invalido:
                  summary: "Resposta: Token inválido"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso o token seja enviado na request, ele será validado e, caso esteja inválido, será apagado e a sessão de login será encerrada."
                    Saida-Real:
                      status: 401
                      resposta: 
                        tipo: 11
                        descricao: "Token inválido."

                Resposta_Token-nao-enviado:
                  summary: "Resposta: Token não-enviado"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso o token não seja enviado na request."
                    Saida-Real:
                      status: 401
                      resposta: 
                        tipo: 13
                        descricao: "Ação recusada: Token não enviado."

        '403':
          description: "Usuário sem autorização para acessar recurso"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Resposta_Acao-especifica-negada'

              examples:

                Resposta_Acao-especifica-negada:
                  summary: "Resposta: Ação especifica negada"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso o token seja enviado na request, ele seja validado, tenha permissão suficiente mas não para realizar ação desejada."
                    Saida-Real:
                      status: 403
                      resposta: 
                        tipo: 13
                        descricao: "Ação recusada: Produto de distribuidor diferente dos permitido."
           
        '404':
          description: "Dados não-existentes"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Resposta_Dados-não-existentes'
              
              examples:
                
                Resposta_Dados-não-existentes:
                  summary: "Resposta: Dados não-existentes"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso a request ocorra mas não existam dado para serem encontrados"
                    Saida-Real:
                      status: 404
                      resposta: 
                        tipo: 7
                        descricao: "Sem dados para retornar."  

  /marketplace/usuarios/eu/ultimos-vistos/registro:

    post:
      tags:
        - "Registro dos ultimos vistos do marketplace"
      summary: Registra/Atualiza os produtos nos ultimos vistos.

      description: >
                      - Adiciona produtos nos ultimos vistos do usuario-cliente

      security:
        - ApiKeyAuth: []

      requestBody:
        description: "Request Body."
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Body-request-registro-ultimos-vistos'
            examples:
              Request Comum:  # <--- Nome do Exemplo dado
                summary: Request correto
                value:
                  # vv Payload do exemplo vv
                  id_produto: '100-1'
                  id_cliente: 1
 
      responses:

        '201':
          description: "Recurso Criado"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Resposta_Tudo-ok'

              examples:
                
                Resposta_Tudo-ok:
                  summary: "Resposta: tudo ok"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso a request ocorra sem nenhum problema."
                    Saida-Real:
                      status: 201
                      resposta: 
                        tipo: 1
                        descricao: "Cadastro do ultimo visto concluido."

        '400':
          description: "Erro de sintaxe do usuário"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Resposta_Dados-invalidos'
                  - $ref: '#/components/schemas/Resposta_Dados-faltantes'
                  - $ref: '#/components/schemas/Resposta_Valores-invalidos'
                  - $ref: '#/components/schemas/Resposta_Valores-nulos'
              
              examples:
                
                Resposta_Dados-invalidos:
                  summary: "Resposta: Dados inválidos"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Para caso a request seja feita e alguma informação inválida (tag não-esperada) seja enviada."
                    Saida-Real:
                      status: 400
                      resposta: 
                        tipo: 2
                        descricao: "Lista com as chaves que são inválidas."

                Resposta_Dados-faltantes:
                  summary: "Resposta: Dados faltantes"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Para caso a request seja feita e alguma tag obrigatoria não seja enviada."
                    Saida-Real:
                      status: 400
                      resposta: 
                        tipo: 3
                        descricao: "Lista com as chaves que estão faltando."

                Resposta_Valores-invalidos:
                  summary: "Resposta: Valores inválidos"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Para caso a request seja feita e alguma tag obrigatoria esteja com valor do tipo diferente do esperado (string serve para todos)."
                    Saida-Real:
                      status: 400
                      resposta: 
                        tipo: 4
                        descricao: "Lista com as chaves que possuem valores do tipo incorretos."

                Resposta_Valores-nulos:
                  summary: "Resposta: Valores nulos"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Para caso a request seja feita e alguma tag obrigatoria esteja com valor nulo."
                    Saida-Real:
                      status: 400
                      resposta: 
                        tipo: 14
                        descricao: "Lista com as chaves que possuem valores nulos"

        '401':
          description: "Usuário não-autenticado"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Resposta_Token-invalido'
                  - $ref: '#/components/schemas/Resposta_Token-nao-enviado'

              examples:
                
                Resposta_Token-invalido:
                  summary: "Resposta: Token inválido"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso o token seja enviado na request, ele será validado e, caso esteja inválido, será apagado e a sessão de login será encerrada."
                    Saida-Real:
                      status: 401
                      resposta: 
                        tipo: 11
                        descricao: "Token inválido."

                Resposta_Token-nao-enviado:
                  summary: "Resposta: Token não-enviado"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso o token não seja enviado na request."
                    Saida-Real:
                      status: 401
                      resposta: 
                        tipo: 13
                        descricao: "Ação recusada: Token não enviado."

        '403':
          description: "Usuário sem autorização para acessar recurso"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Resposta_Acao-especifica-negada'

              examples:

                Resposta_Acao-especifica-negada:
                  summary: "Resposta: Ação especifica negada"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso o token seja enviado na request, ele seja validado, tenha permissão suficiente mas não para realizar ação desejada."
                    Saida-Real:
                      status: 403
                      resposta: 
                        tipo: 13
                        descricao: "Ação recusada: Produto de distribuidor diferente dos permitido."
           
        '409':
          description: "Conflito na resposta (Normalmente para o pedido de um recurso que, supostamente, deveria existir mas não existe e vice-versa)."
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Resposta_Registro-nao-existente'

              examples:
                
                Resposta_Registro-nao-existente:
                  summary: "Resposta: Registro não-existente"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "mensagem especifica para a situação."
                    Saida-Real:
                      status: 409
                      resposta: 
                        tipo: 5
                        descricao: "Produto não existe."          

  /marketplace/usuarios/dados-cadastrais:
  
    get:
      tags:
        - "Dados Cadastrais do Usuario do Marketplace"
      summary: Visualiza os dados do usuario

      description: >
                      - Retorna as informações do usuario dono do token

      security:
        - ApiKeyAuth: []
 
      responses:
        '200':
          description: "Sucesso na operação"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Resposta_Tudo-ok-dados'

              examples:
                
                Resposta_Tudo-ok-dados:
                  summary: "Resposta: tudo ok com dados"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso a request ocorra sem nenhum problema."
                    Saida-Real:
                      status: 200
                      resposta: 
                        tipo: 1
                        descricao: "Dados do usuario modificados."
                      dados: Dados do usuario atualizados

        '401':
          description: "Usuário não-autenticado"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Resposta_Token-invalido'
                  - $ref: '#/components/schemas/Resposta_Token-nao-enviado'

              examples:
                
                Resposta_Token-invalido:
                  summary: "Resposta: Token inválido"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso o token seja enviado na request, ele será validado e, caso esteja inválido, será apagado e a sessão de login será encerrada."
                    Saida-Real:
                      status: 401
                      resposta: 
                        tipo: 11
                        descricao: "Token inválido."

                Resposta_Token-nao-enviado:
                  summary: "Resposta: Token não-enviado"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso o token não seja enviado na request."
                    Saida-Real:
                      status: 401
                      resposta: 
                        tipo: 13
                        descricao: "Ação recusada: Token não enviado."

        '404':
          description: "Dados não-existentes"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Resposta_Dados-não-existentes'
              
              examples:
                
                Resposta_Dados-não-existentes:
                  summary: "Resposta: Dados não-existentes"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso a request ocorra mas não existam dado para serem encontrados"
                    Saida-Real:
                      status: 404
                      resposta: 
                        tipo: 7
                        descricao: "Sem dados para retornar."             

    post:
      tags:
        - "Dados Cadastrais do Usuario do Marketplace"
      summary: Atualiza os dados do usuario

      description: >
                      - Modifica as informações do usuario dono do token

      security:
        - ApiKeyAuth: []

      requestBody:
        description: "Request Body."
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Body-request-dados-cadastrais-usuario'
            examples:
              Request Comum:  # <--- Nome do Exemplo dado
                summary: Request correto
                value:
                  # vv Payload do exemplo vv
                  nome: "Carlos da silva"
                  telefone: "999999999"
                  senha: "67487bf4c4468fed350e57bb04dd369d"
                  data_nascimento: "9999-99-99"
 
      responses:
        '200':
          description: "Sucesso na operação"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Resposta_Tudo-ok-dados'

              examples:
                
                Resposta_Tudo-ok-dados:
                  summary: "Resposta: tudo ok com dados"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso a request ocorra sem nenhum problema."
                    Saida-Real:
                      status: 200
                      resposta: 
                        tipo: 1
                        descricao: "Dados do usuario modificados."
                      dados: Dados do usuario atualizados

        '400':
          description: "Erro de sintaxe do usuário"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Resposta_Dados-não-alterados'
                  - $ref: '#/components/schemas/Resposta_Dados-invalidos'
                  - $ref: '#/components/schemas/Resposta_Dados-faltantes'
                  - $ref: '#/components/schemas/Resposta_Valores-invalidos'
                  - $ref: '#/components/schemas/Resposta_Valores-nulos'
              
              examples:

                Resposta_Dados-não-alterados:
                  summary: "Resposta: Dados não alterados"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso a request de alteração seja requerida mas nada seja alterado devido a dados invalidos"
                    Saida-Real:
                      status: 400
                      resposta: 
                        tipo: 6
                        descricao: "Dados não encontrados para estes filtros."
                
                Resposta_Dados-invalidos:
                  summary: "Resposta: Dados inválidos"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Para caso a request seja feita e alguma informação inválida (tag não-esperada) seja enviada."
                    Saida-Real:
                      status: 400
                      resposta: 
                        tipo: 2
                        descricao: "Lista com as chaves que são inválidas."

                Resposta_Dados-faltantes:
                  summary: "Resposta: Dados faltantes"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Para caso a request seja feita e alguma tag obrigatoria não seja enviada."
                    Saida-Real:
                      status: 400
                      resposta: 
                        tipo: 3
                        descricao: "Lista com as chaves que estão faltando."

                Resposta_Valores-invalidos:
                  summary: "Resposta: Valores inválidos"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Para caso a request seja feita e alguma tag obrigatoria esteja com valor do tipo diferente do esperado (string serve para todos)."
                    Saida-Real:
                      status: 400
                      resposta: 
                        tipo: 4
                        descricao: "Lista com as chaves que possuem valores do tipo incorretos."

                Resposta_Valores-nulos:
                  summary: "Resposta: Valores nulos"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Para caso a request seja feita e alguma tag obrigatoria esteja com valor nulo."
                    Saida-Real:
                      status: 400
                      resposta: 
                        tipo: 14
                        descricao: "Lista com as chaves que possuem valores nulos"

        '401':
          description: "Usuário não-autenticado"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Resposta_Token-invalido'
                  - $ref: '#/components/schemas/Resposta_Token-nao-enviado'

              examples:
                
                Resposta_Token-invalido:
                  summary: "Resposta: Token inválido"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso o token seja enviado na request, ele será validado e, caso esteja inválido, será apagado e a sessão de login será encerrada."
                    Saida-Real:
                      status: 401
                      resposta: 
                        tipo: 11
                        descricao: "Token inválido."

                Resposta_Token-nao-enviado:
                  summary: "Resposta: Token não-enviado"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso o token não seja enviado na request."
                    Saida-Real:
                      status: 401
                      resposta: 
                        tipo: 13
                        descricao: "Ação recusada: Token não enviado."
    
  /marketplace/usuarios/eu/imagem/upload:
  
    post:
      tags:
        - "Upload de Imagens do usuario"
      summary: POST - Upload de imagens

      description: >
                        - Para realizar o envio de imagem, deve-se enviar uma imagem valida e que o 
                          nome da chave do arquivo seja 'imagem'.

                        - A imagem sera colocada para o usuario do token
                    

      security:
        - ApiKeyAuth: []

      requestBody:
        description: "Request Body."
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Body-request-upload-imagem-usuario'
            
            examples:
              Envio de imagem Comum:  # <--- Nome do Exemplo dado
                summary: Envio de imagem correto
                value:
                  # vv Payload do exemplo vv
                  imagem: "arquivo de imagem"
 
      responses:
        '200':
          description: "Sucesso na operação"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Resposta_Tudo-ok'
                  - $ref: '#/components/schemas/Resposta_Houveram-erros'

              examples:
                
                Resposta_Tudo-ok:
                  summary: "Resposta: tudo ok"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso a request ocorra sem nenhum problema."
                    Saida-Real:
                      status: 200
                      resposta: 
                        tipo: 1
                        descricao: "Todas as transações foram feitas."

                Resposta_Houveram-erros:
                  summary: "Resposta: Houveram erros"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso a request ocorra e algum problema ocorra."
                    Saida-Real:
                      status: 200
                      resposta: 
                        tipo: 15
                        descricao: "Token de sessão enviado."
                      situacao:
                        sucessos: 0
                        falhas: 1
                        descricao: 
                          - motivo: 'Motivo especifico para o erro.'
                            combinacao: 
                              chaves: Chaves unicas para descobrir qual o erro

        '400':
          description: "Erro de sintaxe do usuário"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Resposta_Acao-especifica-negada-erro'

              examples:

                Resposta_Acao-especifica-negada-erro:
                  summary: "Resposta: Ação especifica negada pro erro"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso o token seja enviado na request, ele seja validado, tenha permissão de realizar ação, mas tente fazer algo que não pode acontecer."
                    Saida-Real:
                      status: 400
                      resposta: 
                        tipo: 13
                        descricao: "Ação recusada: Nenhuma imagem enviada."
                
        '401':
          description: "Usuário não-autenticado"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Resposta_Token-invalido'
                  - $ref: '#/components/schemas/Resposta_Token-nao-enviado'

              examples:
                
                Resposta_Token-invalido:
                  summary: "Resposta: Token inválido"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso o token seja enviado na request, ele será validado e, caso esteja inválido, será apagado e a sessão de login será encerrada."
                    Saida-Real:
                      status: 401
                      resposta: 
                        tipo: 11
                        descricao: "Token inválido."

                Resposta_Token-nao-enviado:
                  summary: "Resposta: Token não-enviado"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso o token não seja enviado na request."
                    Saida-Real:
                      status: 401
                      resposta: 
                        tipo: 13
                        descricao: "Ação recusada: Token não enviado."

        '403':
          description: "Usuário sem autorização para acessar recurso"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Resposta_Permissao-insuficiente'

              examples:
                
                Resposta_Permissao-insuficiente:
                  summary: "Resposta: Permissão insuficiente"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso o token seja enviado na request, ele seja validado mas o usuário não tenha permissão suficiente para realizar ação desejada."
                    Saida-Real:
                      status: 403
                      resposta: 
                        tipo: 12
                        descricao: "Usuário sem permissão para realizar ação"

  /marketplace/usuarios/eu/clientes:
  
    get:
      tags:
        - "Clientes do usuario marketplace"
      summary: Listagem dos clientes do usuario

      description: >
                      - Retorna as informações dos clientes válidos atrelados ao usuario e os distribuidores atrelados a cada cliente
                    

      security:
        - ApiKeyAuth: []
 
      responses:
        '200':
          description: "Sucesso na operação"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Resposta_Tudo-ok'

              examples:
                
                Resposta_Tudo-ok:
                  summary: "Resposta: tudo ok"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso a request ocorra sem nenhum problema."
                    Saida-Real:
                      status: 200
                      resposta: 
                        tipo: 1
                        descricao: "Token de sessão enviado."
                      dados: "Lista com informações dos clientes"

        '401':
          description: "Usuário não-autenticado"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Resposta_Token-invalido'
                  - $ref: '#/components/schemas/Resposta_Token-nao-enviado'

              examples:
                
                Resposta_Token-invalido:
                  summary: "Resposta: Token inválido"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso o token seja enviado na request, ele será validado e, caso esteja inválido, será apagado e a sessão de login será encerrada."
                    Saida-Real:
                      status: 401
                      resposta: 
                        tipo: 11
                        descricao: "Token inválido."

                Resposta_Token-nao-enviado:
                  summary: "Resposta: Token não-enviado"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso o token não seja enviado na request."
                    Saida-Real:
                      status: 401
                      resposta: 
                        tipo: 13
                        descricao: "Ação recusada: Token não enviado."

        '404':
          description: "Dados não-existentes"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Resposta_Dados-não-existentes'
              
              examples:
                
                Resposta_Dados-não-existentes:
                  summary: "Resposta: Dados não-existentes"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso a request ocorra mas não existam dado para serem encontrados"
                    Saida-Real:
                      status: 404
                      resposta: 
                        tipo: 7
                        descricao: "Sem dados para retornar."             

  /marketplace/usuarios/eu/cartoes/{id_cliente}:

    get:
      tags:
        - "Cartões de crédito do usuario"
      summary: Lista os cartões de crédito do usuario

      description: >
                      - Lista os cartões de créditos salvos do usuario-cliente

      security:
        - ApiKeyAuth: []

      parameters:
        - in: path
          name: id_cliente
          schema:
            type: integer
          required: true
          description: id do cliente utilizado
 
      responses:
        '200':
          description: "Sucesso na operação"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Resposta_Tudo-ok-dados'

              examples:
                
                Resposta_Tudo-ok-dados:
                  summary: "Resposta: tudo ok com dados"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso a request ocorra sem nenhum problema."
                    Saida-Real:
                      status: 200
                      resposta: 
                        tipo: 1
                        descricao: "Dados enviados."
                      dados: "Cartões de crédito do usuario-clientes atualizados"

        '400':
          description: "Erro de sintaxe do usuário"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Resposta_Dados-invalidos'
                  - $ref: '#/components/schemas/Resposta_Dados-faltantes'
                  - $ref: '#/components/schemas/Resposta_Valores-invalidos'
                  - $ref: '#/components/schemas/Resposta_Valores-nulos'
              
              examples:
            
                Resposta_Dados-invalidos:
                  summary: "Resposta: Dados inválidos"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Para caso a request seja feita e alguma informação inválida (tag não-esperada) seja enviada."
                    Saida-Real:
                      status: 400
                      resposta: 
                        tipo: 2
                        descricao: "Lista com as chaves que são inválidas."

                Resposta_Dados-faltantes:
                  summary: "Resposta: Dados faltantes"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Para caso a request seja feita e alguma tag obrigatoria não seja enviada."
                    Saida-Real:
                      status: 400
                      resposta: 
                        tipo: 3
                        descricao: "Lista com as chaves que estão faltando."

                Resposta_Valores-invalidos:
                  summary: "Resposta: Valores inválidos"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Para caso a request seja feita e alguma tag obrigatoria esteja com valor do tipo diferente do esperado (string serve para todos)."
                    Saida-Real:
                      status: 400
                      resposta: 
                        tipo: 4
                        descricao: "Lista com as chaves que possuem valores do tipo incorretos."

                Resposta_Valores-nulos:
                  summary: "Resposta: Valores nulos"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Para caso a request seja feita e alguma tag obrigatoria esteja com valor nulo."
                    Saida-Real:
                      status: 400
                      resposta: 
                        tipo: 14
                        descricao: "Lista com as chaves que possuem valores nulos"

        '401':
          description: "Usuário não-autenticado"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Resposta_Token-invalido'
                  - $ref: '#/components/schemas/Resposta_Token-nao-enviado'

              examples:
                
                Resposta_Token-invalido:
                  summary: "Resposta: Token inválido"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso o token seja enviado na request, ele será validado e, caso esteja inválido, será apagado e a sessão de login será encerrada."
                    Saida-Real:
                      status: 401
                      resposta: 
                        tipo: 11
                        descricao: "Token inválido."

                Resposta_Token-nao-enviado:
                  summary: "Resposta: Token não-enviado"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso o token não seja enviado na request."
                    Saida-Real:
                      status: 401
                      resposta: 
                        tipo: 13
                        descricao: "Ação recusada: Token não enviado."

        '403':
          description: "Usuário sem autorização para acessar recurso"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Resposta_Acao-especifica-negada'

              examples:
                
                Resposta_Acao-especifica-negada:
                  summary: "Resposta: Ação especifica negada"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso o token seja enviado na request, ele seja validado, tenha permissão suficiente mas não para realizar ação desejada."
                    Saida-Real:
                      status: 403
                      resposta: 
                        tipo: 13
                        descricao: "Ação recusada: Produto de distribuidor diferente dos permitido."

        '404':
          description: "Dados não-existentes"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Resposta_Dados-não-existentes'
              
              examples:
                
                Resposta_Dados-não-existentes:
                  summary: "Resposta: Dados não-existentes"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso a request ocorra mas não existam dado para serem encontrados"
                    Saida-Real:
                      status: 404
                      resposta: 
                        tipo: 7
                        descricao: "Sem dados para retornar."             

    post:
      tags:
        - "Cartões de crédito do usuario"
      summary: Salva cartão de crédito do usuario

      description: >
                      - Cria um token da maxipago para o usuario se o mesmo não estiver cadastrado e cria um token para o cartão de crédito

      parameters:
        - in: path
          name: id_cliente
          schema:
            type: integer
          required: true
          description: id do cliente utilizado

      security:
        - ApiKeyAuth: []

      requestBody:
        description: "Request Body."
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Body-request-cartoes-credito-usuario'
            examples:
              Salvamento Comum:  # <--- Nome do Exemplo dado
                summary: Salvamento correto
                value:
                  # vv Payload do exemplo vv
                  id_cliente: 1
                  nome_titular: "Fulano de tal"
                  logradouro: "Av. Marcos Penteado de Ulhoa Rodrigues"
                  complemento: "11 Andar"
                  numero: 949
                  salvar_cvv: false
                  cidade: "Barueri"
                  estado: "SP"
                  cep: "99999999"
                  ddd: "085"
                  telefone: "998888888"
                  sexo: "Masculino"
                  numero_cartao: "9999999999999999"
                  bandeira: "VISA"
                  vencimento: "0323"
                  cpf: "06783835375"
                  bairro: "Ancuri"
                  data_nascimento: "1998-07-09"
 
      responses:
        '200':
          description: "Sucesso na operação"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Resposta_Tudo-ok-dados'

              examples:
                
                Resposta_Tudo-ok-dados:
                  summary: "Resposta: tudo ok com dados"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso a request ocorra sem nenhum problema."
                    Saida-Real:
                      status: 200
                      resposta: 
                        tipo: 1
                        descricao: "Cartão salvo com sucesso."
                      dados: "Cartões de crédito do usuario-clientes atualizados"

        '400':
          description: "Erro de sintaxe do usuário"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Resposta_Acao-especifica-negada-erro'
                  - $ref: '#/components/schemas/Resposta_Dados-invalidos'
                  - $ref: '#/components/schemas/Resposta_Dados-faltantes'
                  - $ref: '#/components/schemas/Resposta_Valores-invalidos'
                  - $ref: '#/components/schemas/Resposta_Valores-nulos'
              
              examples:

                Resposta_Acao-especifica-negada-erro:
                  summary: "Resposta: Ação especifica negada por erro"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso o token seja enviado na request, ele seja validado, tenha permissão de realizar ação, mas tente fazer algo que não pode acontecer."
                    Saida-Real:
                      status: 400
                      resposta: 
                        tipo: 13
                        descricao: "Ação recusada: Forneca nome e sobrenome."
                
                Resposta_Dados-invalidos:
                  summary: "Resposta: Dados inválidos"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Para caso a request seja feita e alguma informação inválida (tag não-esperada) seja enviada."
                    Saida-Real:
                      status: 400
                      resposta: 
                        tipo: 2
                        descricao: "Lista com as chaves que são inválidas."

                Resposta_Dados-faltantes:
                  summary: "Resposta: Dados faltantes"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Para caso a request seja feita e alguma tag obrigatoria não seja enviada."
                    Saida-Real:
                      status: 400
                      resposta: 
                        tipo: 3
                        descricao: "Lista com as chaves que estão faltando."

                Resposta_Valores-invalidos:
                  summary: "Resposta: Valores inválidos"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Para caso a request seja feita e alguma tag obrigatoria esteja com valor do tipo diferente do esperado (string serve para todos)."
                    Saida-Real:
                      status: 400
                      resposta: 
                        tipo: 4
                        descricao: "Lista com as chaves que possuem valores do tipo incorretos."

                Resposta_Valores-nulos:
                  summary: "Resposta: Valores nulos"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Para caso a request seja feita e alguma tag obrigatoria esteja com valor nulo."
                    Saida-Real:
                      status: 400
                      resposta: 
                        tipo: 14
                        descricao: "Lista com as chaves que possuem valores nulos"

        '401':
          description: "Usuário não-autenticado"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Resposta_Token-invalido'
                  - $ref: '#/components/schemas/Resposta_Token-nao-enviado'

              examples:
                
                Resposta_Token-invalido:
                  summary: "Resposta: Token inválido"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso o token seja enviado na request, ele será validado e, caso esteja inválido, será apagado e a sessão de login será encerrada."
                    Saida-Real:
                      status: 401
                      resposta: 
                        tipo: 11
                        descricao: "Token inválido."

                Resposta_Token-nao-enviado:
                  summary: "Resposta: Token não-enviado"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso o token não seja enviado na request."
                    Saida-Real:
                      status: 401
                      resposta: 
                        tipo: 13
                        descricao: "Ação recusada: Token não enviado."

        '403':
          description: "Usuário sem autorização para acessar recurso"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Resposta_Acao-especifica-negada'

              examples:

                Resposta_Acao-especifica-negada:
                  summary: "Resposta: Ação especifica negada"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso o token seja enviado na request, ele seja validado, tenha permissão suficiente mas não para realizar ação desejada."
                    Saida-Real:
                      status: 403
                      resposta: 
                        tipo: 13
                        descricao: "Ação recusada: Produto de distribuidor diferente dos permitido."

  /marketplace/usuarios/eu/cartoes/remocao:
  
    post:
      tags:
        - "Remoção do cartão de crédito"
      summary: Deletamento dos tokens da maxipago.

      description: >
                      - Deleta o token do maxipago do usuario e remove o cartão do usuario

      security:
        - ApiKeyAuth: []

      requestBody:
        description: "Request Body."
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Body-request-remocao-cartao-credito-usuario'
            examples:
              Request Comum:  # <--- Nome do Exemplo dado
                summary: Request correto
                value:
                  # vv Payload do exemplo vv
                  token_maxipago: "asok3=;"
                  id_cliente: 1
 
      responses:
        '200':
          description: "Sucesso na operação"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Resposta_Tudo-ok'

              examples:
                
                Resposta_Tudo-ok:
                  summary: "Resposta: tudo ok"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso a request ocorra sem nenhum problema."
                    Saida-Real:
                      status: 200
                      resposta: 
                        tipo: 1
                        descricao: "Cartão deletado com sucesso."
                      dados: "Cartões de crédito do usuario-clientes atualizados"

        '400':
          description: "Erro de sintaxe do usuário"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Resposta_Acao-especifica-negada-erro'
                  - $ref: '#/components/schemas/Resposta_Dados-invalidos'
                  - $ref: '#/components/schemas/Resposta_Dados-faltantes'
                  - $ref: '#/components/schemas/Resposta_Valores-invalidos'
                  - $ref: '#/components/schemas/Resposta_Valores-nulos'
              
              examples:

                Resposta_Acao-especifica-negada-erro:
                  summary: "Resposta: Ação especifica negada por erro"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso o token seja enviado na request, ele seja validado, tenha permissão de realizar ação, mas tente fazer algo que não pode acontecer."
                    Saida-Real:
                      status: 400
                      resposta: 
                        tipo: 13
                        descricao: "Ação recusada: Cartão não existente."
                

                Resposta_Dados-invalidos:
                  summary: "Resposta: Dados inválidos"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Para caso a request seja feita e alguma informação inválida (tag não-esperada) seja enviada."
                    Saida-Real:
                      status: 400
                      resposta: 
                        tipo: 2
                        descricao: "Lista com as chaves que são inválidas."

                Resposta_Dados-faltantes:
                  summary: "Resposta: Dados faltantes"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Para caso a request seja feita e alguma tag obrigatoria não seja enviada."
                    Saida-Real:
                      status: 400
                      resposta: 
                        tipo: 3
                        descricao: "Lista com as chaves que estão faltando."

                Resposta_Valores-invalidos:
                  summary: "Resposta: Valores inválidos"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Para caso a request seja feita e alguma tag obrigatoria esteja com valor do tipo diferente do esperado (string serve para todos)."
                    Saida-Real:
                      status: 400
                      resposta: 
                        tipo: 4
                        descricao: "Lista com as chaves que possuem valores do tipo incorretos."

                Resposta_Valores-nulos:
                  summary: "Resposta: Valores nulos"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Para caso a request seja feita e alguma tag obrigatoria esteja com valor nulo."
                    Saida-Real:
                      status: 400
                      resposta: 
                        tipo: 14
                        descricao: "Lista com as chaves que possuem valores nulos"

        '401':
          description: "Usuário não-autenticado"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Resposta_Token-invalido'
                  - $ref: '#/components/schemas/Resposta_Token-nao-enviado'

              examples:
                
                Resposta_Token-invalido:
                  summary: "Resposta: Token inválido"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso o token seja enviado na request, ele será validado e, caso esteja inválido, será apagado e a sessão de login será encerrada."
                    Saida-Real:
                      status: 401
                      resposta: 
                        tipo: 11
                        descricao: "Token inválido."

                Resposta_Token-nao-enviado:
                  summary: "Resposta: Token não-enviado"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso o token não seja enviado na request."
                    Saida-Real:
                      status: 401
                      resposta: 
                        tipo: 13
                        descricao: "Ação recusada: Token não enviado."

        '403':
          description: "Usuário sem autorização para acessar recurso"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Resposta_Acao-especifica-negada'

              examples:
                
                Resposta_Acao-especifica-negada:
                  summary: "Resposta: Ação especifica negada"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso o token seja enviado na request, ele seja validado, tenha permissão suficiente mas não para realizar ação desejada."
                    Saida-Real:
                      status: 403
                      resposta: 
                        tipo: 13
                        descricao: "Ação recusada: Usuario tentando realizar ação por cliente não atrelado ao mesmo."           

  /marketplace/usuarios/eu/exclusao:
  
    post:
      tags:
        - "Deletar dados do usuario do marketplace"
      summary: Deleta a conta do usuario

      description: >
                      - Deleta os dados cadastrais e encerra o login do usuario dono do token

      security:
        - ApiKeyAuth: []
 
      responses:
        '200':
          description: "Sucesso na operação"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Resposta_Tudo-ok'

              examples:
                
                Resposta_Tudo-ok:
                  summary: "Resposta: tudo ok"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso a request ocorra sem nenhum problema."
                    Saida-Real:
                      status: 200
                      resposta: 
                        tipo: 1
                        descricao: "Usuario deletado com sucesso."

        '401':
          description: "Usuário não-autenticado"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Resposta_Token-invalido'
                  - $ref: '#/components/schemas/Resposta_Token-nao-enviado'

              examples:
                
                Resposta_Token-invalido:
                  summary: "Resposta: Token inválido"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso o token seja enviado na request, ele será validado e, caso esteja inválido, será apagado e a sessão de login será encerrada."
                    Saida-Real:
                      status: 401
                      resposta: 
                        tipo: 11
                        descricao: "Token inválido."

                Resposta_Token-nao-enviado:
                  summary: "Resposta: Token não-enviado"
                  value:
                    # vv Payload do exemplo vv
                    Descricao-detalhada:
                      descricao: "Caso o token não seja enviado na request."
                    Saida-Real:
                      status: 401
                      resposta: 
                        tipo: 13
                        descricao: "Ação recusada: Token não enviado."          

  

components:

  # Esquemas envolvendo autenticação/autorização
  securitySchemes:

    ApiKeyAuth:
      type: apiKey
      in: header
      name: token
      description: >
                    - O envio deve ser realizado no header da request.

                    - Nestes Endpoints, o token utilizado será considerado inválido caso algum dos critérios abaixo seja atendido:
                        - Token não armazenado no banco de dados
                        - Token com estrutura inválida (3 elementos separados por 2 pontos)
                        - Token não criado pelo servidor (Erro no decode)
                        - Token Vencido
                        - Dados internos não batem
                        - Alterar_senha (tag do token) está ativo.
                          - Vale ressaltar que no endpoint de alterar senha o requisito de alterar_senha não existe

  schemas:

    ## Body Requests

    # Alterar senha
    Body-request-alterar-senha-marketplace:
      type: object
      properties:
        
        senha_temporaria:
          type: string
          description: "Senha temporaria do usuário."
          maxLength: 32
          minLength: 32
          format: md5

        nova_senha:
          type: string
          description: "Nova senha do usuário."
          maxLength: 32
          minLength: 32
          format: md5

      required:
        - senha_temporaria
        - nova_senha

      example:

        senha_temporaria: "31855a6c9e1a8f05da6032f1e89568a1"
        nova_senha: "31855a6c9e1a8f05da6032f1e89568a1"

    # Cadastro de usuario
    Body-request-cadastro-usuario-marketplace:
      type: object
      properties:
        
        nome:
          type: string
          description: "Nome completo o usuário."
          maxLength: 100
          pattern: ^[A-ZÀ-Ÿ][A-zÀ-ÿ']+\s([A-zÀ-ÿ']\s?)*[A-ZÀ-Ÿ][A-zÀ-ÿ']+$

        cpf: 
          type: string
          description: "CPF do usuário. String numérica inteira."
          maxLength: 11
          minLength: 11

        cnpj: 
          type: string
          description: "CNPJ do usuário."
          maxLength: 14
          minLength: 14
        
        telefone: 
          type: string
          description: "Telefone do usuario."
          maxLength: 20
          pattern: ^[1-9]{2}([2-5]|9[6-9])[0-9]{7}$
        
        email: 
          type: string
          description: "Email do usuario."
          maxLength: 50
          pattern: ^[a-zA-Z0-9.!#$%&'*+\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$
        
        senha: 
          type: string
          description: "Senha do usuario."
          maxLength: 32
          format: md5          

        data_nascimento: 
          type: string
          description: "Data de nascimento do usuário."
          format: date
          maxLength: 11
          pattern: AAAA-MM-DD

      required:
        - nome
        - cpf
        - cnpj
        - telefone
        - email
        - senha
        - data_nascimento
        - token_aparelho

      example:

        nome: "Pedro alvares cabral"
        cpf: "99999999999"
        cnpj: "99999999999999"
        telefone: "85999999999"
        email: "email@servidor.com"
        senha: "senha123"
        data_nascimento: "1999-01-01"
        token_aparelho: "000000"

    # Dados cadastrais do usuario
    Body-request-dados-cadastrais-usuario:
      type: object
      properties:
        
        nome:
          type: string
          description: "Novo nome do usuario."
          maxLength: 100
          pattern: ^[A-ZÀ-Ÿ][A-zÀ-ÿ']+\s([A-zÀ-ÿ']\s?)*[A-ZÀ-Ÿ][A-zÀ-ÿ']+$
        
        telefone: 
          type: string
          description: "Telefone do usuario."
          maxLength: 20

        senha:
          type: string
          description: "Nova senha do usuario."
          maxLength: 50
          format: md5

        data_nascimento:
          type: string
          description: "Data de nascimento do titular."
          format: date

      example:

        nome: "Carlos da silva"
        telefone: "999999999"
        senha: "67487bf4c4468fed350e57bb04dd369d"
        data_nascimento: "9999-99-99"
 
    Body-request-upload-imagem-usuario:
      type: object
      properties:

        imagem:
          type: string
          format: binary

      required:
        - imagem

      example:

        imagem: "arquivo de imagem"

    # Cartões de crédito do usuario
    Body-request-cartoes-credito-usuario:
      type: object
      properties:
        
        id_cliente:
          type: integer
          description: "ID do cliente."
        
        nome_titular: 
          type: string
          description: "Nome do titular do cartão."
          maxLength: 100
        
        logradouro: 
          type: string
          description: "Endereço da rua do titular."
          maxLength: 300
        
        complemento: 
          type: string
          description: "Complemento do endereço da rua do titular."
          maxLength: 100

        bairro: 
          type: string
          description: "Bairro do titular."
          maxLength: 200

        numero: 
          type: integer
          description: "Número do endereço do titular."

        salvar_cvv: 
          type: boolean
          description: "Caso seja necessário salvar o cvv."
          enum:
            - true
            - false

        cvv: 
          type: string
          description: "CVV do cartão. Obrigatorio se salvar_cvv for true (Opcional)"
          maxLength: 200

        cidade: 
          type: string
          description: "Cidade do titular."
          maxLength: 100

        estado: 
          type: string
          description: "Estado do titular."
          maxLength: 2

        cep: 
          type: string
          description: "Cep do titular."
          maxLength: 8

        ddd: 
          type: string
          description: "DDD do telefone do titular."
          maxLength: 2

        telefone: 
          type: string
          description: "Telefone do titular."
          maxLength: 9

        sexo:
          type: string
          description: "Sexo do titular."
          maxLength: 1
          enum:
            - M
            - F

        numero_cartao:
          type: string
          description: "Número do cartão de crédito do titular."
          maxLength: 16
          minLength: 16

        bandeira:
          type: string
          description: "Bandeira do cartão de crédito do titular."
          maxLength: 50

        vencimento:
          type: string
          description: "Vencimento do cartão de crédito do titular."
          maxLength: 4
          minLength: 4
          pattern: "MMYY"

        cpf:
          type: string
          description: "CPF do titular."
          maxLength: 11

        data_nascimento:
          type: string
          description: "Data de nascimento do titular."
          format: date

      required:
        - id_cliente
        - nome_titular
        - logradouro
        - bairro
        - numero
        - salvar_cvv
        - cidade
        - estado
        - cep
        - ddd
        - telefone
        - sexo
        - numero_cartao
        - bandeira
        - vencimento
        - cpf
        - data_nascimento

      example:

        id_cliente: 1
        nome_titular: "Fulano de tal"
        logradouro: "Av. Marcos Penteado de Ulhoa Rodrigues"
        complemento: "11 Andar"
        numero: 949
        salvar_cvv: false
        cidade: "Barueri"
        estado: "SP"
        cep: "99999999"
        ddd: "085"
        telefone: "998888888"
        sexo: "Masculino"
        numero_cartao: "9999999999999999"
        bandeira: "VISA"
        vencimento: "0323"
        cpf: "06783835375"
        bairro: "Ancuri"
        data_nascimento: "1998-07-09"

    # Remoção dos cartões de crédito do usuario
    Body-request-remocao-cartao-credito-usuario:
      type: object
      properties:
        
        token_maxipago:
          type: string
          description: "token maxipago do cartão."
        
        id_cliente: 
          type: integer
          description: "ID do cliente."

      required:
        - id_cliente
        - token_maxipago

      example:

        token_maxipago: "asok3=;"
        id_cliente: 1 

    # Esquecer senha marketplace
    Body-request-esquecer-senha-marketplace:
      type: object
      properties:
        
        email:
          type: string
          description: "Email do usuario."

      required:
        - email

      example:

        email: "email@servidor.com"

    # Login marketplace
    Body-request-login-marketplace:
      type: object
      properties:
        
        email:
          type: string
          description: "Email do usuario."
        
        senha: 
          type: string
          description: "Senha do usuario."
          format: md5
        
        manter_logado: 
          type: boolean
          description: "Se o usuario clicou em manter_logado ou não."
        
        token_aparelho: 
          type: string
          description: "Token intrínseco do aparelho utilizado."
        
        latitude: 
          type: string
          description: "Latitude do dispositivo do usuário."
        
        longitude: 
          type: string
          description: "Longitude do dispositivo do usuário."

      required:
        - email
        - senha
        - manter_logado
        - token_aparelho

      example:

        email: "email@servidor.com"
        senha: "31855a6c9e1a8f05da6032f1e89568a1"
        manter_logado: false
        token_aparelho: "codigo do dispositivo"
        latitude: "90"
        longitude: "90"

    # Inicialização de sessão
    Body-request-inicializacao-sessao:
      type: object
      properties:
        
        token_aparelho: 
          type: string
          description: "Token intrínseco do aparelho utilizado."
        
        token_firebase:
          type: string
          description: "Token firebase do aparelho"
        
        os:
          type: string
          description: "Sistema operacional do aparelho"
        
        modelo_aparelho:
          type: string
          description: "Modelo do aparelho"

        latitude: 
          type: string
          description: "Latitude do dispositivo do usuário."
        
        longitude: 
          type: string
          description: "Longitude do dispositivo do usuário."

        navegador:
          type: string
          description: "Meio utilizado para acessar o marketplace."
          default: 'APP'

        versao_app:
          type: string
          description: "Versão do os do aparelho"

      required:
        - token_aparelho
        - token_firebase
        - os
        - modelo_aparelho

      example:
        token_aparelho: 1234
        token_firebase: 1234
        os: android
        modelo_aparelho: xiaomi s9

    # Finalização de sessão
    Body-request-finalizacao-sessao:
      type: object
      properties:
        
        token_aparelho: 
          type: string
          description: "Token intrínseco do aparelho utilizado."
        
        navegador:
          type: string
          description: "Meio utilizado para acessar o marketplace."
          default: 'APP'

      required:
        - token_aparelho

      example:

        token_aparelho: "968c8039-2853-4414-ac12-822a0dfcf66a"
        navegador: "web-ios-968c8039-2853-4414-ac12-822a0dfcf66a"

    # Orcamento
    Body-request-orcamento-marketplace:
      type: object
      required:
        - id_cliente
        - orcamentos
      properties:

        id_cliente:
          type: integer
          description: "ID do cliente. (Opcional caso não seja enviado na url)"

        orcamentos:
          type: array
          description: "Array dos orcamentos"
          items:

            type: object
            description: "Informacoes do orcamento"
            required:
              - id_distribuidor
              - itens

            properties:

              id_distribuidor:
                type: integer
                description: "Id do distribuidor"

              id_cupom:
                type: integer
                description: "Id do cupom utilizado no orcamento do distribuidor"

              itens:
                type: array
                description: "Holder dos produtos do carrinho"
                items:

                  type: object
                  description: "produto do carrinho"
                  required: 
                    - id_produto
                    - quantidade
                  properties:
        
                    id_produto:
                      type: string
                      description: "ID do produto."
                      maxLength: 50
              
                    quantidade: 
                      type: integer
                      description: "Quantidade do produto que será salva."
                      minimum: 0

                    id_campanha: 
                      type: integer
                      description: "ID de oferta compre e ganhe."

                    bonificado: 
                      type: boolean
                      description: "Se o produto é bonificado."

                    id_escalonado: 
                      type: integer
                      description: "ID de oferta escalonada."

                    desconto:
                      type: number
                      description: desconto aplicado no preco do produto

                    preco_aplicado:
                      type: number
                      description: preco aplicado no produto

      example:

        id_cliente: 1
        orcamentos:
          - id_distribuidor: 1
            id_cupom: null
            itens: 
              - id_produto: "2388-1"
                quantidade: 1

              - id_produto: "3332-1"
                quantidade: 1
                id_campanha: 451
                bonificado: false

              - id_produto: "3332-1"
                quantidade: 1
                id_campanha: 451
                bonificado: true

              - id_produto: "2243-1"
                quantidade: 1
                id_escalonado: 245

    # Favoritos
    Body-request-listar-favoritos:
      type: object
      properties:
        
        id_distribuidor:
          type: integer
          description: "Identificação do distribuidor."
        
        id_cliente: 
          type: integer
          description: "Identificação do cliente."

        ordenar:
          type: integer
          enum: [1,2,3,4,5,6,7,8]
          default: 7
          description: >
                          Qual o tipo de ordenação que será aplicada:

                            * 1 - Ordenação por maior preço
                            * 2 - Ordenação por menor preço
                            * 3 - Ordenação por recomendação (ranking)
                            * 4 - não implementado ainda (padroniza para 3)
                            * 5 - Ordenação por ordem alfabética (A à Z)
                            * 6 - Ordenação por ordem alfabética (Z à A)
                            * 7 - Ordenação por ultimo adicionado
                            * 8 - Ordenação por mais antigo

        estoque:
          type: boolean
          default: false
          description: > 
                          Checa o estado do estoque do produto

                            * true - Garante que todos os produtos tenham estoque
                            * false - Não garante que todos os produtos tenham estoque

        desconto:
          type: boolean
          description: Caso seja requerido que todos os produtos tenham desconto

        tipo_oferta:
          type: integer
          enum: [0,1,2]
          default: 0
          description: >
                          Qual o tipo de oferta desejada:

                            * 0 - Nenhum
                            * 1 - Campanha/Compre e Ganhe
                            * 2 - Escalonado

        marca: 
          type: array
          description: "Lista com os ids de marca."
          items:
            type: integer

        grupos: 
          type: array
          description: "Lista com os ids de grupo."
          items:
            type: integer

        subgrupos: 
          type: array
          description: "Lista com os ids de subgrupo."
          items:
            type: integer

        pagina:
          type: integer
          description: Pagina da paginação atual
          minimum: 1
          default: 1

        limite:
          type: integer
          description: Quantidade de itens por página
          minimum: 1
          default: 20

      required:
        - id_distribuidor
        - id_cliente

      example:

        id_distribuidor: 0
        id_cliente: 1
        ordenar: 4
        estoque: false
        desconto: false
        tipo_oferta: 0
        marca: [10622]
        grupos: []
        subgrupos: []
        pagina: 1
        limite: 20

    Body-request-registro-favoritos:
      type: object
      properties:
        
        id_cliente:
          type: integer
          description: "ID do cliente."
        
        id_produto: 
          type: string
          description: "ID do produto."

      required:
        - id_cliente
        - id_produto

      example:

        id_cliente: "1"
        id_produto: "100-1"

    Body-request-remocao-favoritos:
      type: object
      properties:
        
        id_produto: 
          type: string
          description: "ID do produto."

      required:
        - id_produto

      example:
        id_produto: "100-1"

    # Ultimos vistos
    Body-request-listar-ultimos-vistos:
      type: object
      properties:
        
        id_distribuidor:
          type: integer
          description: "Identificação do distribuidor do produto e do subgrupo."
        
        id_cliente: 
          type: integer
          description: "Identificação do cliente."

        ordenar:
          type: integer
          enum: [1,2,3,4,5,6,7,8]
          default: 7
          description: >
                          Qual o tipo de ordenação que será aplicada:

                            * 1 - Ordenação por maior preço
                            * 2 - Ordenação por menor preço
                            * 3 - Ordenação por recomendação (ranking)
                            * 4 - não implementado ainda (padroniza para 3)
                            * 5 - Ordenação por ordem alfabética (A à Z)
                            * 6 - Ordenação por ordem alfabética (Z à A)
                            * 7 - Ordenação por ultimo adicionado
                            * 8 - Ordenação por mais antigo

        estoque:
          type: boolean
          default: false
          description: > 
                          Checa o estado do estoque do produto

                            * true - Garante que todos os produtos tenham estoque
                            * false - Não garante que todos os produtos tenham estoque

        desconto:
          type: boolean
          description: Caso seja requerido que todos os produtos tenham desconto

        tipo_oferta:
          type: integer
          enum: [0,1,2]
          default: 0
          description: >
                          Qual o tipo de oferta desejada:

                            * 0 - Nenhum
                            * 1 - Campanha/Compre e Ganhe
                            * 2 - Escalonado

        marca: 
          type: array
          description: "Lista com os ids de marca."
          items:
            type: integer

        grupos: 
          type: array
          description: "Lista com os ids de grupo."
          items:
            type: integer

        subgrupos: 
          type: array
          description: "Lista com os ids de subgrupo."
          items:
            type: integer

        pagina:
          type: integer
          description: Pagina da paginação atual
          minimum: 1
          default: 1

        limite:
          type: integer
          description: Quantidade de itens por página
          minimum: 1
          default: 20

      required:
        - id_cliente

      example:

        id_distribuidor: 0
        id_cliente: 1
        ordenar: 4
        estoque: false
        desconto: false
        tipo_oferta: 0
        marca: [10622]
        grupos: []
        subgrupos: []
        pagina: 1
        limite: 20

    Body-request-registro-ultimos-vistos:
      type: object
      properties:
        
        id_produto:
          type: string
          description: "ID do produto."
        
        id_cliente: 
          type: integer
          description: "ID do cliente."

      required:
        - id_produto
        - id_cliente

      example:

        id_produto: '100-1'
        id_cliente: 1

    # Pedidos
    Body-request-listar-pedidos:
      type: object
      properties:
        
        id_cliente:
          type: integer
          description: "Id cliente pai do orcamento"

        id_distribuidor: 
          type: array
          description: "Lista com os ID distribuidor que devem ser filtrados"

          items:

            type: integer
            description: "Id distribuidor"

        id_pedido:
          type: integer
          description: "Id de um pedido especifico"

        etapa:
          type: integer
          description: "Id etapa minimo do pedido"
          enum:
            [0,1,2,3,4]

        busca:
          type: string
          description: >
                          Campo de busca da seção de pedido. Atualmente busca por:
                            - id_pedido

        data_pedido_de:
          type: string
          description: "Data de pedido minima"
          pattern: YYYY-MM-DD

        data_pedido_ate:
          type: string
          description: "Data de pedido maxima"
          pattern: YYYY-MM-DD

        pagina:
          type: integer
          description: Pagina da paginação atual
          minimum: 1
          default: 1

        limite:
          type: integer
          description: Quantidade de itens por página
          minimum: 1
          default: 20

      required:
        - id_cliente

      example:

        id_cliente: 1
        id_distribuidor: []
        id_pedido: 1
        etapa: 0
        busca: ""
        data_pedido_de: "1900-01-01"
        data_pedido_ate: "3000-01-01"
        pagina: 1
        limite: 1
      
    Body-request-registro-pedidos:
      type: object
      properties:
        
        id_orcamento:
          type: integer
          description: "Id do orcamento que irá se tornar pedido"
        
        id_distribuidor: 
          type: integer
          description: "Id do distribuidor pai do orcamento"

        cliente: 
          type: object
          description: "Informações do cliente pai do orcamento"
          properties:

            id_cliente:
              type: integer
              description: "Id cliente pai do orcamento"

          required:
            - id_cliente

        metodo_pagamento:
          type: object
          description: "Informações da forma de pagamento utilizada"
          properties:

            id:
              type: integer
              description: "Id da forma de pagamento"

            id_condpgto:
              type: integer
              description: "Id da condição de pagamento"

            id_maxipago:
              type: string
              description: "Id da maxipago para aquele cliente"

            numero_cartao:
              type: string
              description: "String representante do cartao utilizado"

            bandeira:
              type: string
              description: "Bandeira do cartao"

            cvv:
              type: string
              description: "cvv que será utilizado no pagamento. Somente necessário caso o cvv não esteja salvo."
              minimum: 3
              maximum: 4

          required:
            - id
            - id_condpgto
        
        cupom:
          type: array
          description: "Cupom utilizado no cupom"
          properties:

            id_cupom:
              type: integer
              description: "Id do cupom utilizado"

          required:
            - id_cupom

        qtde_itens:
          type: integer
          description: "Quantidade de itens no orcamento"

        subtotal:
          type: number
          description: "Valor bruto do pedido sem descontos, juros, percentual e frete"

        desconto:
          type: number
          description: "Valor total descontado do orcamento vindo do desconto intrinseco e do desconto escalonado"

        desconto_cupom:
          type: number
          description: "Valor que sera descontado do subtotal bruto devido o cupom aplicado"

        bonus:
          type: number
          description: "Valor total descontado do orcamento vindo dos produtos ganhos de ofertas compre e ganhe|campanha"

        liquido:
          type: number
          description: "Valor do subtotal bruto sem o desconto e sem o bonus"

        frete_liquido:
          type: number
          description: "Frete que será cobrado do usuario"
        
        total:
          type: number
          description: "Total que será cobrado do usuario"

      required:
        - id_orcamento
        - id_distribuidor
        - cliente
        - metodo_pagamento
        - cupom
        - qtde_itens
        - subtotal
        - desconto
        - desconto_cupom
        - bonus
        - liquido
        - frete_liquido
        - total

      example:

        id_orcamento: 1
        id_distribuidor: 1
        cliente: 
          - id_cliente: 1
        metodo_pagamento:
          - id: 1
          - id_condpgto: 1
        cupom:
          - id_cupom: 2
        qtde_itens: 4
        subtotal: 898.35
        desconto: 29.52
        desconto_cupom: 14.39
        bonus: 193.65
        liquido: 675.18
        frete_liquido: 0
        total: 660.79

    # Financeiro
    Body-request-listar-boletos:
      type: object
      properties:
        
        id_cliente:
          type: integer
          description: "Id cliente pai do orcamento"

        id_distribuidor: 
          type: array
          description: "Lista com os ID distribuidor que devem ser filtrados"

          items:

            type: integer
            description: "Id distribuidor"

        busca:
          type: string
          description: >
                          Campo de busca da seção de pedido. Atualmente busca por:
                            - id_pedido

        data_pedido_de:
          type: string
          description: "Data de pedido minima"
          pattern: YYYY-MM-DD

        data_pedido_ate:
          type: string
          description: "Data de pedido maxima"
          pattern: YYYY-MM-DD

        status:
          type: string
          description: "Status geral do pagamento do pedido"
          enum:
            - EM ABERTO
            - EM ATRASO
            - PAGO
            - CANCELADO

        pagina:
          type: integer
          description: Pagina da paginação atual
          minimum: 1
          default: 1

        limite:
          type: integer
          description: Quantidade de itens por página
          minimum: 1
          default: 20

      required:
        - id_cliente

      example:

        id_cliente: 1
        id_distribuidor: []
        busca: ""
        data_pedido_de: "1900-01-01"
        data_pedido_ate: "3000-01-01"
        status: "EM ABERTO"
        pagina: 1
        limite: 1

    # Pix
    Body-request-checar-status-pix:
      type: object
      properties:
        
        id_pedido:
          type: integer
          description: "Id do pedido a ter o pix verificado"

        id_cliente:
          type: integer
          description: "Id do cliente pai do pedido"

      required:
        - id_pedido
        - id_cliente

      example:

        id_pedido: 1
        id_cliente: 2
        
    # Envios
    Body-request-envio-notas-fiscais:
      type: object
      properties:
        
        id_cliente:
          type: integer
          description: "ID do cliente pai do pedido"
        
        id_pedido: 
          type: integer
          description: "ID do pedido"

      required:
        - id_cliente
        - id_pedido

      example:

        id_cliente: 7101
        id_pedido: 110

    Body-request-envio-boletos:
      type: object
      properties:
        
        id_cliente:
          type: integer
          description: "ID do cliente pai do pedido"
        
        id_pedido: 
          type: integer
          description: "ID do pedido"

      required:
        - id_cliente
        - id_pedido

      example:

        id_cliente: 7101
        id_pedido: 110

    ## Body response

    # Resposta para Tudo ok
    Resposta_Tudo-ok:
      type: object
      description: "Caso a request ocorra sem nenhum problema."

      properties:
        
          status:
            type: integer
            description: "Codigo HTTP da resposta enviada"
          
          resposta: 
            type: object
            description: "Utilizado para informar o tipo da resposta e uma descrição da mesma"
            properties:
          
              tipo: 
                type: string
                description: "Tipo da resposta apresentada"
          
              descricao:
                type: string
                description: "Mensagem descrevendo a situação da resposta"
      
      example:

        status: 200
        resposta: 
          tipo: 1
          descricao: "Mensagem específica para a situação"

    # Resposta para Tudo ok com dados de retorno
    Resposta_Tudo-ok-dados:
      type: object
      description: "Caso a request ocorra sem nenhum problema."

      properties:
        
          status:
            type: integer
            description: "Codigo HTTP da resposta enviada"
          
          resposta: 
            type: object
            description: "Utilizado para informar o tipo da resposta e uma descrição da mesma"
            properties:
          
              tipo: 
                type: string
                description: "Tipo da resposta apresentada"
          
              descricao:
                type: string
                description: "Mensagem descrevendo a situação da resposta"

          dados:
            type: array
            description: Lista com os dados requeridos
            items:
              type: object
      
      example:

        status: 200
        resposta: 
          tipo: 1
          descricao: Dados encontrados.
        dados: Holder dos dados encontrados

    # Resposta para Erro genérico
    Resposta_Erro-generico:
      type: object
      description: "Caso um erro especifico aconteca."

      properties:
        
          status:
            type: integer
            description: "Codigo HTTP da resposta enviada"
          
          resposta: 
            type: object
            description: "Utilizado para informar o tipo da resposta e uma descrição da mesma"
            properties:
          
              tipo: 
                type: string
                description: "Tipo da resposta apresentada"
          
              descricao:
                type: string
                description: "Mensagem descrevendo a situação da resposta"
      
      example:

        status: 200
        resposta: 
          tipo: 18
          descricao: "Erro genêrico"

    # Resposta para Tudo ok paginado
    Resposta_Tudo-ok-paginado:
      type: object
      description: "Caso a request ocorra sem nenhum problema."

      properties:
        
          status:
            type: integer
            description: "Codigo HTTP da resposta enviada"
          
          resposta: 
            type: object
            description: "Utilizado para informar o tipo da resposta e uma descrição da mesma"
            properties:
          
              tipo: 
                type: string
                description: "Tipo da resposta apresentada"
          
              descricao:
                type: string
                description: "Mensagem descrevendo a situação da resposta"

          informacoes:
            type: object
            description: "Quarda informações sobre a paginação das informações."
            properties:

              itens:
                type: integer
                description: "Quantidade Máxima de informações a serem paginadas."

              paginas:
                type: integer
                description: "Quantidade Máxima de paginas disponiveis."

              pagina_atual:
                type: integer
                description: "Pagina atualmente da paginação."

          dados:
            type: array
            description: Lista com as informações dos produtos
            items:

              type: object
              description: Produto
      
      example:

        status: 200
        resposta: 
          tipo: 1
          descricao: "Dados enviados."
        informacoes: 
          itens: 0
          paginas: 0
          pagina_atual: 0
        dados: "Lista com os produtos do filtro"

    # Resposta para Tudo ok com dados de retorno do orcamento
    Resposta_Tudo-ok-dados-orcamento:
      type: object
      description: "Caso a request ocorra sem nenhum problema."

      properties:
        
          status:
            type: integer
            description: "Codigo HTTP da resposta enviada"
          
          resposta: 
            type: object
            description: "Utilizado para informar o tipo da resposta e uma descrição da mesma"
            properties:
          
              tipo: 
                type: string
                description: "Tipo da resposta apresentada"
          
              descricao:
                type: string
                description: "Mensagem descrevendo a situação da resposta"

          dados:
            type: object
            description: Informações do orçamento
            properties:

              id_usuario:
                type: integer
                description: "ID do usuario"

              id_cliente:
                type: integer
                description: "ID do cliente"

              ofertas:
                type: array
                description: "Holder das ofertas do orçamento"
                items:

                  type: object
                  description: "Informações de uma oferta"

              orcamentos:
                type: array
                description: "Array dos orçamentos do carrinho"
                items:

                  type: object
                  description: "Informações de um orcamento"
                  properties:

                    id_orcamento:
                      type: integer
                      description: Id do orcamento

                    id_distribuidor:
                      type: integer
                      description: ID do distribuidor pai do orcamento

                    itens:
                      type: array
                      description: Produtos do orcamento
                      items:

                        type: object
                        description: Objeto de produto do carrinho

              cupons:
                type: array
                description: Array com os id de cupom pertencentes ao carrinho
                items:

                  type: integer
                  description: Id do cupom
      
      example:

        status: 200
        resposta: 
          tipo: 1
          descricao: "Token de sessão enviado."
        dados: {
                  "id_usuario": 1,
                  "id_cliente": 2,
                  "ofertas": [],
                  "orcamentos": [
                      {
                          "id_orcamento": 123,
                          "id_distribuidor": 1,
                          "itens": [
                              {
                                  "id_produto": "3559-1",
                                  "cod_prod_distr": "7312502",
                                  "id_distribuidor": 1,
                                  "preco_tabela": 38.73,
                                  "preco_financeiro": null,
                                  "preco_desconto": null,
                                  "preco_aplicado": null,
                                  "quantidade": 4,
                                  "estoque": 1737,
                                  "desconto": 0,
                                  "desconto_tipo": 0,
                                  "imagem": [
                                      "http://192.168.203.24:5977/imagens/produto/150/7897161371024/agua-oxigenada-alyne-creme-40-volumes-100ml-com-24-unidades/1.png",
                                      "http://192.168.203.24:5977/imagens/produto/150/7897161371024/agua-oxigenada-alyne-creme-40-volumes-100ml-com-24-unidades/2.png"
                                  ],
                                  "categorizacao": [
                                      {
                                          "id_tipo": 2,
                                          "descricao_tipo": "CATEGORIAS",
                                          "grupo": [
                                              {
                                                  "id_grupo": 103,
                                                  "descricao_grupo": "CORPO E ROSTO",
                                                  "subgrupo": [
                                                      {
                                                          "id_subgrupo": 10325,
                                                          "descricao_subgrupo": "AG OXIG/AMONIACO/EMULSAO"
                                                      }
                                                  ]
                                              }
                                          ]
                                      }
                                  ],
                                  "id_tipo": [
                                      2
                                  ],
                                  "id_grupo": [
                                      103
                                  ],
                                  "id_subgrupo": [
                                      10325
                                  ],
                                  "sku": "7897161371024",
                                  "descricao_produto": "AGUA OXIGENADA ALYNE CREME 40 VOLUMES 100ML COM 24 UNIDADES",
                                  "id_marca": 10102,
                                  "descricao_marca": "ALYNE",
                                  "status": "A",
                                  "unidade_embalagem": "CX",
                                  "quantidade_embalagem": 1,
                                  "unidade_venda": "CX",
                                  "quant_unid_venda": 24,
                                  "multiplo_venda": 1
                              }
                          ]
                      }
                  ],
                  "cupons": []
              }

    # Resposta para Tudo ok com dados de retorno do pedido feito com pix
    Resposta_Tudo-ok-dados-pedido-pix:
      type: object
      description: "Caso a request ocorra sem nenhum problema."

      properties:
        
          status:
            type: integer
            description: "Codigo HTTP da resposta enviada"
          
          resposta: 
            type: object
            description: "Utilizado para informar o tipo da resposta e uma descrição da mesma"
            properties:
          
              tipo: 
                type: string
                description: "Tipo da resposta apresentada"
          
              descricao:
                type: string
                description: "Mensagem descrevendo a situação da resposta"

          dados:
            type: object
            description: Informações do orçamento
            properties:

              id_usuario:
                type: integer
                description: "ID do usuario"

              id_cliente:
                type: integer
                description: "ID do cliente"

              ofertas:
                type: array
                description: "Holder das ofertas do orçamento"
                items:

                  type: object
                  description: "Informações de uma oferta"

              orcamentos:
                type: array
                description: "Array dos orçamentos do carrinho"
                items:

                  type: object
                  description: "Informações de um orcamento"
                  properties:

                    id_orcamento:
                      type: integer
                      description: Id do orcamento

                    id_distribuidor:
                      type: integer
                      description: ID do distribuidor pai do orcamento

                    itens:
                      type: array
                      description: Produtos do orcamento
                      items:

                        type: object
                        description: Objeto de produto do carrinho

              cupons:
                type: array
                description: Array com os id de cupom pertencentes ao carrinho
                items:

                  type: integer
                  description: Id do cupom
      
      example:

        status: 200
        resposta: 
          tipo: 1
          descricao: "Token de sessão enviado."
        dados: {
                  "status": true,
                  "id_pedido": 118,
                  "pix": {
                      "txid": "4c6cdeaabe704cd3bd818055fdb528f9",
                      "valor": 169.92,
                      "copia_e_cola": "00020101021226770014BR.GOV.BCB.PIX2555api.itau/pix/qr/v2/e251b080-5cf8-4707-897e-f60ffb94bae25204000053039865802BR5912DAG MERCHANT6009SAO PAULO62070503***6304E392",
                      "expiracao": 3600,
                      "data_expiracao": "2023-01-31 14:58:06.120",
                      "status": "ATIVA",
                      "id_cobranca": 3
                  }
              }
    
    # Resposta pedido-falho
    Resposta_pedido-falhou:
      type: object
      description: "Caso a request ocorra mas o pedido não foi registrado."

      properties:
        
          status:
            type: integer
            description: "Codigo HTTP da resposta enviada"
          
          resposta: 
            type: object
            description: "Utilizado para informar o tipo da resposta e uma descrição da mesma"
            properties:
          
              tipo: 
                type: string
                description: "Tipo da resposta apresentada"
          
              descricao:
                type: string
                description: "Mensagem descrevendo a situação da resposta"

          dados:
            type: object
            description: "Resposta do pedido"
            properties:

              status:
                type: boolean
                enum: [false]
                description: Se o pedido foi criado com sucesso

              id_pedido:
                type: integer
                description: Id de identificação do pedido

              id_motivo:
                type: integer
                description: Id de identificação do motivo de falha no registro do pedido

              motivo:
                type: string
                description: Explicação do motivo pelo qual o pedido não foi registrado
      
      example:

        status: 200
        resposta: 
          tipo: 15
          descricao: "Pedido não-registrado."
        dados:
          status: false
          id_pedido: null
          id_motivo: 15
          motivo: cupom invalidado por (motivo especifico)

    # Resposta para Houveram erros
    Resposta_Houveram-erros:
      type: object
      description: "Caso a request ocorra e algum problema ocorra."

      properties:
        
          status:
            type: integer
            description: "Codigo HTTP da resposta enviada"
          
          resposta: 
            type: object
            description: "Utilizado para informar o tipo da resposta e uma descrição da mesma"
            properties:
          
              tipo: 
                type: string
                description: "Tipo da resposta apresentada"
          
              descricao:
                type: string
                description: "Mensagem descrevendo a situação da resposta"

          situacao:
            type: object
            description: "Holder das infomrações dos atributos do erro"
            properties:

              sucessos:
                type: integer
                description: quantidade de sucessos que houveram durante a transação

              falhas:
                type: integer
                description: quantidade de falhas que houveram durante a transação

              descricao: 
                type: array
                description: Holder dos objetos de falhas
                items:

                  type: object
                  description: Holder dos objetos contendos os agentes responsáveis pelo erro e uma descrição do erro
                  properties:

                      motivo:
                        type: string
                        description: Descrição especifica do erro
                      
                      combinação:
                        type: object
                        description: Holder dos agentes causadores do erro
      
      example:

        status: 200
        resposta: 
          tipo: 15
          descricao: "Token de sessão enviado."
        situacao:
          sucessos: 0
          falhas: 1
          descricao: 
            - motivo: 'Motivo especifico para o erro.'
              combinacao: 
                chaves: Chaves unicas para descobrir qual o erro

    # Resposta para Token válido
    Resposta_Token-valido:
      type: object
      description: Caso o token seja enviado na request, ele será validado e, caso esteja válido, será devolvido.
      
      properties:
        
        status:
          type: integer
          description: "Codigo HTTP da resposta enviada"
        
        resposta: 
          type: object
          description: "Utilizado para informar o tipo da resposta e uma descrição da mesma"
          properties:
        
            tipo: 
              type: string
              description: "Tipo da resposta apresentada"
        
            descricao:
              type: string
              description: "Mensagem descrevendo a situação da resposta"

        token:
          type: string
          description: Token de login do usuário

      example:

        status: 200
        resposta: 
          tipo: 1
          descricao: "Token de sessão reenviado."
        token: "token do usuario para uso normal"

    # Resposta para Permissão insuficiente
    Resposta_Permissao-insuficiente:
      type: object
      description: Caso o token seja enviado na request, ele seja validado mas o usuário não tenha permissão suficiente para realizar ação desejada.
      properties:
        
        status:
          type: integer
          description: "Codigo HTTP da resposta enviada"
        
        resposta: 
          type: object
          description: "Utilizado para informar o tipo da resposta e uma descrição da mesma"
          properties:
        
            tipo: 
              type: string
              description: "Tipo da resposta apresentada"
        
            descricao:
              type: string
              description: "Mensagem descrevendo a situação da resposta"

      example:

        status: 403
        resposta: 
          tipo: 12
          descricao: "Usuário sem permissão para realizar ação"

    # Resposta para ação especifica negada
    Resposta_Acao-especifica-negada:
      type: object
      description: Caso o token seja enviado na request, ele seja validado, tenha permissão de realizar ação, mas tente fazer-lo por outro alguem.
      properties:
        
        status:
          type: integer
          description: "Codigo HTTP da resposta enviada"
        
        resposta: 
          type: object
          description: "Utilizado para informar o tipo da resposta e uma descrição da mesma"
          properties:
        
            tipo: 
              type: string
              description: "Tipo da resposta apresentada"
        
            descricao:
              type: string
              description: "Mensagem descrevendo a situação da resposta"

      example:

        status: 403
        resposta: 
          tipo: 13
          descricao: "Ação recusada: Produto de distribuidor diferente dos permitido."

    # Resposta para ação especifica negada por erro
    Resposta_Acao-especifica-negada-erro:
      type: object
      description: Caso o token seja enviado na request, ele seja validado, tenha permissão de realizar ação, mas tente fazer algo que não pode acontecer.
      properties:
        
        status:
          type: integer
          description: "Codigo HTTP da resposta enviada"
        
        resposta: 
          type: object
          description: "Utilizado para informar o tipo da resposta e uma descrição da mesma"
          properties:
        
            tipo: 
              type: string
              description: "Tipo da resposta apresentada"
        
            descricao:
              type: string
              description: "Mensagem descrevendo a situação da resposta"

      example:

        status: 400
        resposta: 
          tipo: 13
          descricao: "Ação recusada: Mensagem especifica."

    # Resposta para Token inválido
    Resposta_Token-invalido:
      type: object
      description: Caso o token seja enviado na request, ele será validado e, caso esteja inválido, será apagado e a sessão de login será encerrada.
      properties:
        
        status:
          type: integer
          description: "Codigo HTTP da resposta enviada"
        
        resposta: 
          type: object
          description: "Utilizado para informar o tipo da resposta e uma descrição da mesma"
          properties:
        
            tipo: 
              type: string
              description: "Tipo da resposta apresentada"
        
            descricao:
              type: string
              description: "Mensagem descrevendo a situação da resposta"

      example:

        status: 401
        resposta: 
          tipo: 11
          descricao: "Token inválido."

    # Resposta para Token inválido
    Resposta_Token-nao-enviado:
      type: object
      description: Caso o token não seja enviado na request.
      properties:
        
        status:
          type: integer
          description: "Codigo HTTP da resposta enviada"
        
        resposta: 
          type: object
          description: "Utilizado para informar o tipo da resposta e uma descrição da mesma"
          properties:
        
            tipo: 
              type: string
              description: "Tipo da resposta apresentada"
        
            descricao:
              type: string
              description: "Mensagem descrevendo a situação da resposta"

      example:

        status: 401
        resposta: 
          tipo: 13
          descricao: "Ação recusada: Token não enviado."

    # Resposta para Dados não existentes
    Resposta_Dados-não-existentes:
      type: object
      description: "Caso a request ocorra mas não existam dado para serem encontrados"

      properties:
        
          status:
            type: integer
            description: "Codigo HTTP da resposta enviada"
          
          resposta: 
            type: object
            description: "Utilizado para informar o tipo da resposta e uma descrição da mesma"
            properties:
          
              tipo: 
                type: string
                description: "Tipo da resposta apresentada"
          
              descricao:
                type: string
                description: "Mensagem descrevendo a situação da resposta"
      
      example:

        status: 404
        resposta: 
          tipo: 7
          descricao: "Sem dados para retornar."

    # Resposta para Dados não encontrados
    Resposta_Dados-não-encontrados:
      type: object
      description: "Caso a request ocorra mas não sejam encontrados os dados pedidos"

      properties:
        
          status:
            type: integer
            description: "Codigo HTTP da resposta enviada"
          
          resposta: 
            type: object
            description: "Utilizado para informar o tipo da resposta e uma descrição da mesma"
            properties:
          
              tipo: 
                type: string
                description: "Tipo da resposta apresentada"
          
              descricao:
                type: string
                description: "Mensagem descrevendo a situação da resposta"
      
      example:

        status: 400
        resposta: 
          tipo: 6
          descricao: "Dados não encontrados para estes filtros."

    # Resposta para Dados não alterados
    Resposta_Dados-não-alterados:
      type: object
      description: "Caso a request de alteração seja requerida mas nada seja alterado devido a dados invalidos"

      properties:
        
          status:
            type: integer
            description: "Codigo HTTP da resposta enviada"
          
          resposta: 
            type: object
            description: "Utilizado para informar o tipo da resposta e uma descrição da mesma"
            properties:
          
              tipo: 
                type: string
                description: "Tipo da resposta apresentada"
          
              descricao:
                type: string
                description: "Mensagem descrevendo a situação da resposta"
      
      example:

        status: 400
        resposta: 
          tipo: 16
          descricao: "Não houveram modificações na transação."

    # Resposta para Dados inválidos
    Resposta_Dados-invalidos:
      type: object
      description: Para caso a request seja feita e alguma informação inválida (tag não-esperada) seja enviada.
      properties:
        
        status:
          type: integer
          description: "Codigo HTTP da resposta enviada"
        
        resposta: 
          type: object
          description: "Utilizado para informar o tipo da resposta e uma descrição da mesma"
          properties:
        
            tipo: 
              type: string
              description: "Tipo da resposta apresentada"
        
            descricao:
              type: string
              description: "Mensagem descrevendo a situação da resposta"

      example:

        status: 400
        resposta: 
          tipo: 2
          descricao: "Lista com as chaves que são inválidas"

    # Resposta para Dados faltantes
    Resposta_Dados-faltantes:
      type: object
      description: Para caso a request seja feita e alguma tag obrigatoria não seja enviada.
      properties:
        
        status:
          type: integer
          description: "Codigo HTTP da resposta enviada"
        
        resposta: 
          type: object
          description: "Utilizado para informar o tipo da resposta e uma descrição da mesma"
          properties:
        
            tipo: 
              type: string
              description: "Tipo da resposta apresentada"
        
            descricao:
              type: string
              description: "Mensagem descrevendo a situação da resposta"

      example:

        status: 400
        resposta: 
          tipo: 3
          descricao: "Lista com as chaves que estão faltando"

    # Resposta para Valores inválidos
    Resposta_Valores-invalidos:
      type: object
      description: Para caso a request seja feita e alguma tag obrigatoria esteja com valor do tipo diferente do esperado (string serve para todos).
      properties:
        
        status:
          type: integer
          description: "Codigo HTTP da resposta enviada"
        
        resposta: 
          type: object
          description: "Utilizado para informar o tipo da resposta e uma descrição da mesma"
          properties:
        
            tipo: 
              type: string
              description: "Tipo da resposta apresentada"
        
            descricao:
              type: string
              description: "Mensagem descrevendo a situação da resposta"

      example:

        status: 400
        resposta: 
          tipo: 4
          descricao: "Lista com as chaves que possuem valores do tipo incorretos"

    # Resposta para Valores nulos
    Resposta_Valores-nulos:
      type: object
      description: Para caso a request seja feita e alguma tag obrigatoria esteja com valor nulo.
      properties:
        
        status:
          type: integer
          description: "Codigo HTTP da resposta enviada"
        
        resposta: 
          type: object
          description: "Utilizado para informar o tipo da resposta e uma descrição da mesma"
          properties:
        
            tipo: 
              type: string
              description: "Tipo da resposta apresentada"
        
            descricao:
              type: string
              description: "Mensagem descrevendo a situação da resposta"

      example:

        status: 400
        resposta: 
          tipo: 14
          descricao: "Lista com as chaves que possuem valores nulos"
    
    # Resposta para Senha inválida
    Resposta_Senha-invalida:
      type: object
      description: Para caso a request seja feita e a senha esteja em um tamanho inválido.
      properties:
        
        status:
          type: integer
          description: "Codigo HTTP da resposta enviada"
        
        resposta: 
          type: object
          description: "Utilizado para informar o tipo da resposta e uma descrição da mesma"
          properties:
        
            tipo: 
              type: string
              description: "Tipo da resposta apresentada"
        
            descricao:
              type: string
              description: "Mensagem descrevendo a situação da resposta"

      example:

        status: 400
        resposta: 
          tipo: 8
          descricao: "Senha fora do padrão."

    # Resposta para Registro não-existente
    Resposta_Registro-nao-existente:
      type: object
      description: mensagem especifica para a situação.
      properties:
        
        status:
          type: integer
          description: "Codigo HTTP da resposta enviada"
        
        resposta: 
          type: object
          description: "Utilizado para informar o tipo da resposta e uma descrição da mesma"
          properties:
        
            tipo: 
              type: string
              description: "Tipo da resposta apresentada"
        
            descricao:
              type: string
              description: "Mensagem descrevendo a situação da resposta"

      example:

        status: 409
        resposta: 
          tipo: 5
          descricao: "Mensagem especifica"

    # Resposta para Registro já-existente
    Resposta_Registro-ja-existente:
      type: object
      description: mensagem especifica para a situação.
      properties:
        
        status:
          type: integer
          description: "Codigo HTTP da resposta enviada"
        
        resposta: 
          type: object
          description: "Utilizado para informar o tipo da resposta e uma descrição da mesma"
          properties:
        
            tipo: 
              type: string
              description: "Tipo da resposta apresentada"
        
            descricao:
              type: string
              description: "Mensagem descrevendo a situação da resposta"

      example:

        status: 409
        resposta: 
          tipo: 5
          descricao: "Mensagem especifica"